{"version":3,"sources":["containers/PatientPortal.jsx","containers/styles/styles.jsx","components/Auth/Alert.jsx","components/Auth/styles.jsx","components/Auth/Login.jsx","components/Dashboard/styles.jsx","components/Dashboard/DashboardElement.jsx","components/Dashboard/Dashboard.jsx","util/data.js","components/DisplayBox/DisplayBox.js","components/ConsoleBox/ConsoleBox.js","components/Inputs/InputBox.js","components/Inputs/CheckBox.js","components/SettingsBox/SettingsBox.js","util/fhir.js","components/SMARTBox/PatientBox.js","util/buildScript.2017071.js","PrefetchTemplate.js","components/RequestBox/RequestBox.js","util/auth.js","containers/RequestBuilder.js","util/buildRequest.js","containers/styles/theme.jsx","components/App.js","index.js","util/util.js"],"names":["PatientPortal","classes","useStyles","_useState","useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","client","setClient","_useState5","_useState6","patientName","setPatientName","useEffect","data","JSON","parse","Buffer","from","split","FHIR","serverUrl","env","get","asString","tokenResponse","type","access_token","patient","patientId","request","concat","id","then","getName","name","given","push","family","join","_jsxs","className","background","children","_jsx","AppBar","position","sx","zIndex","backgroundColor","height","Toolbar","Typography","variant","noWrap","component","lineHeight","loginIcon","AccountBoxIcon","fontSize","verticalAlign","Dashboard","Login","tokenCallback","memo","makeStyles","theme","palette","common","offWhite","adminBar","redDark","width","textAlign","adminBarText","color","white","fontFamily","float","marginLeft","formFont","marginRight","index","Alert","props","message","handleClose","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","MuiAlert","severity","overflow","loginButton","marginTop","red","textTransform","fontWeight","loginContent","boxShadow","margin","paddingLeft","paddingTop","loginHeader","grayDark","loginInput","display","loginPersistance","loginCheckbox","loginCheckboxText","grayLightText","loginSubheader","passwordField","marginBottom","passwordForget","cursor","resize","black","setMessage","username","_setUsername","password","_setPassword","onSubmit","useCallback","params","URLSearchParams","append","axios","post","withCredentials","result","catch","err","console","error","listener","event","code","preventDefault","document","addEventListener","removeEventListener","noValidate","autoComplete","TextField","root","value","onChange","target","label","Button","onClick","purple","dashboardArea","padding","overflowY","overflowX","dashboardElement","elementHeader","elementIcon","listItemText","progressBubble","borderRadius","spacer","DashboardElement","s","resource","clientState","state","status","date","Date","meta","lastUpdated","toUTCString","_resource$questionnai","questionnaire","slice","questionnaireId","link","appContext","encodeURIComponent","url","retrieveLaunchContext","accessToken","e","window","Paper","bColor","style","renderStatus","CalendarTodayIcon","AssignmentIcon","filter","resources","setResources","checked","setChecked","drawerWidth","addResources","bundle","entry","forEach","_toConsumableArray","Box","CssBaseline","Drawer","_defineProperty","flexShrink","boxSizing","List","icons","itemStyle","NotificationsIcon","AlarmIcon","MedicalInformationIcon","MedicationIcon","BiotechIcon","SettingsIcon","LogoutIcon","createIcons","map","option","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","primaryTypographyProps","primary","Divider","flexGrow","p","FormControlLabel","control","Checkbox","length","resourcesToRender","reverse","renderElements","headerDefinitions","alternativeTherapy","baseUrl","cdsUrl","defaultUser","ehrUrl","includeConfig","launchUrl","orderSelect","orderSign","patientView","pimsUrl","responseExpirationDays","sendPrefetch","smartAppUrl","types","info","debug","warning","defaultValues","key","text","codeSystem","shortNameMap","DisplayBox","PropTypes","bool","object","func","isRequired","string","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","launchLink","bind","_assertThisInitialized","launchSource","renderSource","modifySmartLaunchUrls","exitSmart","smartLink","response","_createClass","nextProps","prevState","stringify","this","resourceType","toUpperCase","suggestion","buttonId","suggestionCount","cardNum","selectionBehavior","_this2","isDemoCard","i","bId","getElementById","setAttribute","uuid","method","uri","actions","action","log","delete","create","supportedRequesType","takeSuggestion","update","setState","card","_this3","links","linkCopy","Object","assign","fhirAccessToken","ehrLaunch","indexOf","fhirServerUrl","fhirVersion","source","icon","_this4","src","alt","href","_this5","buttonList","indicators","renderedCards","cards","sort","b","a","indicator","c","cardInd","linksSection","summarySection","summary","sourceSection","keys","detailSection","detail","ReactMarkdown","suggestionsSection","suggestions","item","ind","serviceUrl","pdfIcon","PictureAsPdfIcon","endIcon","cardSectionHeaderStyle","builtCard","Card","React","Fragment","CardContent","gutterBottom","CardActions","requestButton","removeAttribute","Component","ConsoleBox","handleAddition","_ref","options","handleChange","_ref2","updateCB","elementName","currentValue","showStatus","headerStatus","toggleConsole","objDiv","scrollTop","scrollHeight","logs","element","content","InputBox","onInputChange","extraClass","CheckBox","_event","toggle","toggleClass","indicatorClass","displayName","extraInnerClass","resetHeaderDefinitions","reset","consoleLog","_objectSpread","flat","resetUrl","URL","origin","fetch","_ref3","SettingsBox","_this$props","headers","self","other","localeCompare","_ref4","_ref5","getAge","dateString","today","birthDate","age","getFullYear","m","getMonth","getDate","PatientBox","deviceRequests","medicationRequests","serviceRequests","medicationDispenses","questionnaireResponses","openRequests","openQuestionnaires","handleRequestChange","updatePrefetchRequest","getDeviceRequest","getServiceRequest","getMedicationRequest","getMedicationDispense","getRequests","getResponses","makeQROption","handleResponseChange","makeDropdown","codeCodeableConcept","coding","medicationCodeableConcept","system","stateVar","stateChange","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","op","MenuItem","getCoding","callback","clearCallback","updateQRResponse","queries","requests","query","queryKey","urlQuery","json","callbackMap","Promise","all","results","user","patientReference","userReference","updatePrefetchCallback","fetchResources","resolveReferences","graph","_this6","_this7","updateDate","setDate","toISOString","qr","authored","_this8","responseOptions","returned","makeOption","gender","IconButton","RefreshIcon","size","updateValues","xmlAddTextNode","xmlDoc","parent","sectionName","section","createElement","textNode","createTextNode","appendChild","buildNewRxName","doc","nameResource","buildNewRxAddress","addressResource","address","line","city","postalCode","buildNewRxRequest","patientResource","practitionerResource","medicationRequestResource","implementation","createDocument","header","getTime","body","newRx","humanPatient","patientNameResource","patientResourceGender","toLowerCase","dateOfBirth","patientAddressResource","buildNewRxPatient","prescriber","nonVeterinarian","identifier","includes","identification","practitionerNameResource","practitionerAddressResource","communicationNumbers","telecom","primaryTelephone","buildNewRxPrescriber","medicationPrescribed","drugCoded","medicationCodingList","endsWith","productCode","dispenseRequest","quantity","quantityUnitOfMeasure","quantityUnitOfMeasureFromDrugFormCode","writtenDate","authoredOn","numberOfRepeatsAllowed","sig","dosageInstruction","buildNewRxMedication","PrefetchTemplate","prefetchMap","Map","PRACTITIONER_PREFETCH","REQUEST_PREFETCH","PATIENT_PREFETCH","ALL_REQUESTS_PREFETCH","set","paramElementMap","requestBundle","resolvedQueries","arguments","prefetchKey","undefined","getQuery","parametersToFill","match","resolvedQuery","j","unresolvedParameter","resolvedParameter","resolveParameter","replace","path","Error","getProp","paramField","generatePrefetchMap","generateParamElementMap","top","left","flexDirection","transform","bgcolor","border","borderBottom","RequestBox","openPatient","submitPatientView","submitInfo","prepPrefetch","submitOrderSelect","_","isEmpty","submitOrderSign","submit","updateStateElement","updateStateList","updateStateMap","clearState","prefetchedResources","practitioner","coverage","getPatients","patientList","emptyField","launchSmartOnFhirApp","_this$state$prefetche","_this$state$prefetche2","userId","relaunch","buildLaunchLink","sendRx","serializer","XMLSerializer","serializeToString","codeValues","gatherCount","renderRequestResources","renderPatientInfo","renderOtherInfo","renderResource","renderPrefetchedResources","renderError","preppedResources","resourceKey","resourceList","Array","isArray","prevProps","prefetchCompleted","patientState","renderQRInfo","qrResponse","_Fragment","author","reference","entries","requestResources","renderedPrefetches","renderedList","currentRenderedPrefetch","resourceId","order","isOrderNotSelected","insurance","disableSendToCRD","loading","disableLaunchDTR","disableSendRx","disableLaunchSmartOnFhir","isPatientNotSelected","Modal","callbackList","generateQueries","startIcon","PersonIcon","ButtonGroup","disabled","makeid","possible","charAt","Math","floor","random","RequestBuilder","timeout","time","controller","AbortController","setTimeout","abort","keypair","showSettings","asBool","asInt","submit_info","requestBox","createRef","_KEYUTIL$generateKeyp","KEYUTIL","generateKeypair","prvKeyObj","pubKeyObj","jwkPrv2","getJWKFromKey","jwkPub2","kid","KJUR","jws","JWS","getJWKthumbprint","private","public","pubPem","setupKeys","tokenUrl","grant_type","client_id","searchParams","login","jsonContent","prefetch","hook","hookConfig","json_request","includePrefetch","requester","r4json","extension","context","draftOrders","selections","buildRequest","jwt","currentTime","IntDate","endTime","sign","createJwt","Headers","signal","clearTimeout","fhirResponse","TypeError","current","replaceRequestAndSubmit","ref","colors","redLight","blue","blueDark","blueLighter","gray","grayMedium","grayBlue","grayBlueDark","grayHighlight","grayLight","grayLighter","grayLightest","grayVeryDark","green","maroon","turqoise","turqoiseLight","paletteBase","main","secondary","default","grey","createTheme","overrides","MuiTableCell","head","sizeSmall","paddingRight","MuiTableContainer","MuiTableSortLabel","App","apply","Router","Routes","Route","exact","ThemeProvider","ReactDOM","render","BrowserRouter","basename","process","fhirBaseUrl","resolve","reject","launchParameters","parameters","prototype","hasOwnProperty","launch_id"],"mappings":"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","file":"static/js/main.d046be09.chunk.js","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport useStyles from './styles/styles';\nimport FHIR from \"fhirclient\";\nimport Login from '../components/Auth/Login';\nimport Dashboard from '../components/Dashboard/Dashboard';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport env from 'env-var';\n\nconst PatientPortal = () => {\n    const classes = useStyles();\n    const [token, setToken] = useState(null);\n    const [client, setClient] = useState(null);\n    const [patientName, setPatientName] = useState(null);\n\n    useEffect(() => {\n        if(token) {\n            const data = JSON.parse(Buffer.from(token.split('.')[1], 'base64'))\n            const client = FHIR.client({\n                serverUrl: env.get('REACT_APP_EHR_BASE').asString(),\n                tokenResponse: {\n                    type: 'bearer',\n                    access_token: token,\n                    patient: data.patientId\n                },\n            });\n            client.request(`Patient/${client.patient.id}`).then((patient) => {\n                setPatientName(getName(patient));\n            });\n            setClient(client);\n        }\n\n      }, [token])\n\n    const getName = (patient) => {\n        const name = [];\n        if(patient.name) {\n            if(patient.name[0].given) {\n                name.push(patient.name[0].given[0]);\n            }\n            if(patient.name[0].family){\n                name.push(patient.name[0].family);\n            }\n        }\n        return name.join(' ');\n    }\n    return (\n        <div className={classes.background}>\n            <AppBar position=\"fixed\" sx={{ zIndex: 1300, backgroundColor: '#bb3551', height:'95px'}}>\n                <Toolbar>\n                <Typography variant=\"h5\" noWrap component=\"div\" sx={{lineHeight: '95px'}}>\n                    <strong>EHR</strong> Patient Portal\n                </Typography>\n                {patientName ? \n                                <span className={classes.loginIcon}>\n                                    <AccountBoxIcon  sx={{ fontSize: 60, verticalAlign: 'middle'}}/> {patientName}\n                                </span>\n                                :\n                                null\n                }\n                </Toolbar>\n            </AppBar>\n                {token && client ?\n                    <Dashboard client={client}></Dashboard>\n                    :\n                    <Login tokenCallback={setToken}></Login>\n                }\n        </div>\n    );\n};\n\nexport default memo(PatientPortal);\n","import { makeStyles } from '@mui/styles';\nexport default makeStyles(\n  theme => ({\n    background: {\n      backgroundColor: theme.palette.common.offWhite,\n      height: '100vh'\n    },\n    adminBar: {\n      height: '95px',\n      backgroundColor: theme.palette.common.redDark,\n      width: '100%',\n      textAlign: 'center',\n      lineHeight: '95px'\n    },\n    adminBarText: {\n      color: theme.palette.common.white,\n      fontSize: '19px',\n      fontFamily: 'Verdana',\n      float: 'left',\n      marginLeft: '20px'\n    },\n    formFont: {\n      fontFamily: '\"Gill Sans\", sans-serif'\n    },\n    loginIcon: {\n      color: theme.palette.common.white,\n      fontSize: '19px',\n      marginLeft: 'auto',\n      fontFamily: 'Verdana',\n      float: 'right',\n      marginRight: '20px',\n      verticalAlign: 'middle'\n    }\n  }),\n\n  { name: 'PatientPortal', index: 1 }\n);\n","import React from 'react';\nimport { Snackbar } from '@mui/material';\nimport {Alert as MuiAlert} from '@mui/material'\nimport PropTypes from 'prop-types';\n\nfunction Alert(props) {\n  const { message, handleClose } = props;\n\n  return (\n    <Snackbar\n      open={message !== null}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    >\n      <MuiAlert onClose={handleClose} severity=\"error\">\n        {message}\n      </MuiAlert>\n    </Snackbar>\n  );\n}\n\nAlert.propTypes = {\n  message: PropTypes.string,\n  handleClose: PropTypes.func.isRequired\n};\n\nexport default Alert;\n","import { makeStyles } from '@mui/styles';\nexport default makeStyles(\n  theme => ({\n    background: {\n      backgroundColor: theme.palette.common.offWhite,\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    formFont: {\n      fontFamily: '\"Gill Sans\", sans-serif'\n    },\n    loginButton: {\n      width: '460px',\n      marginTop: '20px !important',\n      height: '90px',\n      color: theme.palette.common.white,\n      backgroundColor: `${theme.palette.common.red} !important`,\n      fontSize: '30px !important',\n      textTransform: 'none !important',\n      fontFamily: 'inherit',\n      fontWeight: `200 !important`\n    },\n    loginContent: {\n      width: '600px',\n      height: '700px',\n      boxShadow: '0 4px 4px rgba(0, 0, 0, 0.10)',\n      backgroundColor: theme.palette.common.white,\n      margin: '150px auto 0px auto',\n      paddingLeft: '75px',\n      paddingTop: '90px',\n      textAlign: 'left'\n    },\n    loginHeader: {\n      fontSize: '36px',\n      fontWeight: 600,\n      width: '100%',\n      color: theme.palette.common.grayDark,\n      fontFamily: 'inherit'\n    },\n    loginInput: {\n      display: 'block',\n      fontFamily: 'inherit'\n    },\n    loginPersistance: {\n      display: 'flex',\n      lineHeight: '144px'\n    },\n    loginCheckbox: {\n      height: '24px',\n      width: '24px',\n      margin: '60px 0px 15px 0px'\n    },\n    loginCheckboxText: {\n      fontWeight: 100,\n      fontSize: '24px',\n      marginLeft: '20px',\n      color: theme.palette.common.grayLightText,\n      fontFamily: 'inherit'\n    },\n    loginSubheader: {\n      fontSize: '24px',\n      textAlign: 'left',\n      fontWeight: 100,\n      color: theme.palette.common.grayLightText,\n      marginTop: '20px',\n      fontFamily: 'inherit'\n    },\n    passwordField: {\n      marginBottom: '30px'\n    },\n    passwordForget: {\n      float: 'right',\n      color: theme.palette.common.red,\n      margin: '10px 70px 0px 0px',\n      fontSize: '24px',\n      fontFamily: 'inherit',\n      cursor: 'pointer'\n    },\n    resize: {\n      display: 'block',\n      marginTop: '30px !important',\n      marginBottom: '5px !important',\n      fontSize: '20px',\n      fontWeight: 100,\n      color: theme.palette.common.black,\n      width: '450px'\n    }\n  }),\n\n  { name: 'Auth', index: 1 }\n);\n","import React, { memo, useCallback, useState, useEffect } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport Alert from './Alert';\nimport axios from 'axios';\nimport useStyles from './styles';\nimport env from 'env-var';\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(null);\n  const [username, _setUsername] = useState('');\n  const [password, _setPassword] = useState('');\n  const handleClose = () => setMessage(null);\n\n  const onSubmit = useCallback(() => {\n    if (username && password) {\n      const params = new URLSearchParams();\n      params.append('username', username);\n      params.append('password', password);\n      params.append('grant_type', 'password');\n      params.append('client_id', env.get('REACT_APP_CLIENT').asString());\n      axios\n        .post(\n          `${env.get('REACT_APP_AUTH').asString()}/realms/${env.get('REACT_APP_REALM').asString()}/protocol/openid-connect/token`,\n          params,\n          { withCredentials: true }\n        )\n        .then((result) => {\n          props.tokenCallback(result.data.access_token);\n        })\n        .catch(err => {\n          setMessage('Unable to Login');\n          console.error(err);\n        });\n    }\n  }, [username, password, props]);\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n        event.preventDefault();\n        onSubmit();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => {\n      document.removeEventListener('keydown', listener);\n    };\n  }, [username, password, onSubmit]);\n\n  const setUsername = (event => {\n    _setUsername(event.target.value);\n  });\n\n  const setPassword = (event => {\n    _setPassword(event.target.value);\n  });\n\n \n\n  return (\n    <div className={classes.background}>\n      <Alert message={message} handleClose={handleClose} />\n\n      <div className={`${classes.loginContent} ${classes.formFont}`}>\n        <div className={classes.loginHeader}>Log in.</div>\n        <div className={classes.loginSubheader}>Log in to view your patient records.</div>\n        <form noValidate autoComplete=\"off\" className={classes.formFont}>\n          <TextField\n            classes={{\n              root: classes.resize\n            }}\n            variant=\"standard\"\n            value={username}\n            onChange={setUsername}\n            label=\"Username\"\n          />\n          <TextField\n            classes={{\n              root: classes.resize\n            }}\n            variant='standard'\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            onChange={setPassword}\n          />\n          <Button\n            variant=\"contained\"\n            classes={{ root: classes.loginButton, label: classes.formFont }}\n            onClick={onSubmit}\n          >\n            Log In\n          </Button>\n          <div className={classes.passwordForget}>Forgot password?</div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Login);\n","import { makeStyles } from '@mui/styles';\nexport default makeStyles(\n  theme => ({\n    adminBar: {\n      height: '95px',\n      backgroundColor: theme.palette.common.purple,\n      width: '100%',\n      textAlign: 'center',\n      lineHeight: '95px'\n    },\n    formFont: {\n      fontFamily: '\"Gill Sans\", sans-serif'\n    },\n    dashboardArea: {\n      backgroundColor: '#fdfdfd',\n      margin: '80px 60px 0px 60px',\n      padding: '20px',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      height: '75vh',\n    },\n    dashboardElement: {\n      height: '100px',\n      width: '100%',\n      padding: '10px',\n      margin: '5px',\n      fontSize: '18px',\n      cursor:'pointer',\n      '&:hover': {\n        boxShadow: '0px 2px 1px 1px rgb(0 0 0 / 40%), 0px 1px 1px 0px rgb(0 0 0 / 28%), 0px 1px 3px 0px rgb(0 0 0 / 24%)'\n      }\n    },\n    elementHeader: {\n      marginLeft: '5px',\n      display: 'inline-block',\n    },\n    elementIcon: {\n      verticalAlign: 'middle'\n    },\n    listItemText:{\n      fontSize:'4.2em',//Insert your required size\n    },\n    progressBubble: {\n      height: '12px',\n      width: '12px',\n      borderRadius: '12px',\n      float: 'right'\n    },\n    spacer: {\n\n    }\n  }),\n\n  { name: 'Dashboard', index: 1 }\n);\n","import React, { memo } from 'react';\nimport { retrieveLaunchContext } from '../../util/util';\nimport { headers } from '../../util/data.js';\nimport { Paper } from '@mui/material';\nimport useStyles from './styles';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport env from 'env-var';\n\nconst DashboardElement = (props) => {\n  const classes = useStyles();\n  const resource = props.resource;\n  const clientState = props.client.state;\n  const status = props.status;\n  const date = new Date(resource.meta.lastUpdated).toUTCString();\n  const [questionnaireId] = resource.questionnaire.split('/').slice(-1);\n  const splitCamelCaseWithAbbreviations = (s) =>{\n    return s.split(/([A-Z][a-z]+)/).filter(function(e){return e});\n }\n  \n  const relaunch = () => {\n    const link = {\n      appContext: encodeURIComponent(`response=QuestionnaireResponse/${resource.id}`),\n      type: \"smart\",\n      url: env.get('REACT_APP_LAUNCH_URL').asString()\n    }\n    retrieveLaunchContext(link, clientState.tokenResponse.accessToken, clientState.tokenResponse.patient, clientState.serverUrl, 'r4').then((e) => {\n      window.open(e.url, \"_blank\");\n    })\n  }\n  const renderStatus = () => {\n    let bColor = {};\n    if(status === 'in-progress') {\n      bColor = {backgroundColor: '#fdbe14'};\n    } else if(status === 'completed') {\n      bColor = {backgroundColor: '#20c997'};\n    }\n    return (\n      <div style = {bColor} className = {classes.progressBubble} ></div>\n    )\n  }\n  return (\n    <div onClick={relaunch}>\n      <Paper className = {classes.dashboardElement}>\n        {renderStatus()}\n        <div>\n          <CalendarTodayIcon className = {classes.elementIcon}/> <strong>Last Updated</strong>: <span> {date}</span>\n        </div>\n        <div>\n          <AssignmentIcon className = {classes.elementIcon}/> <strong> Questionnaire</strong>: {splitCamelCaseWithAbbreviations(questionnaireId).join(' ')}\n          </div>\n      </Paper>\n\n    </div>\n  );\n};\n\nexport default memo(DashboardElement);\n","import React, { memo, useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport DashboardElement from './DashboardElement';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport MedicationIcon from '@mui/icons-material/Medication';\nimport BiotechIcon from '@mui/icons-material/Biotech';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport MedicalInformationIcon from '@mui/icons-material/MedicalInformation';\nimport { Paper } from '@mui/material';\n\nconst Dashboard = (props) => {\n  const classes = useStyles();\n  const [resources, setResources] = useState([]);\n  const [message, setMessage] = useState(\"Loading...\")\n  const [checked, setChecked] = useState(true)\n  const drawerWidth = '340px';\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const addResources = (bundle) => {\n    if (bundle.entry) {\n      bundle.entry.forEach((e) => {\n        const resource = e.resource;\n        setResources(resources => [...resources, resource])\n      })\n    }\n  }\n  const createIcons = () => {\n    const icons = [];\n    const style = { fontSize: '40px' };\n    const itemStyle = { height: '80px' }\n    const qStyle = { height: '80px', backgroundColor: '#f5f5fa' };\n    icons.push(['Notifications', <NotificationsIcon sx={style} />, itemStyle]);\n    icons.push(['Appointments', <AlarmIcon sx={style} />, itemStyle]);\n    icons.push(['Questionnaire Forms', <AssignmentIcon sx={style} />, qStyle]);\n    icons.push(['Health Data', <MedicalInformationIcon sx={style} />, itemStyle]);\n    icons.push(['Medications', <MedicationIcon sx={style} />, itemStyle]);\n    icons.push(['Tests and Results', <BiotechIcon sx={style} />, itemStyle]);\n    icons.push(['Settings', <SettingsIcon sx={style} />, itemStyle]);\n    icons.push(['Logout', <LogoutIcon sx={style} />, itemStyle]);\n\n    return icons;\n  }\n  useEffect(() => {\n    if (props.client.patient.id) {\n      props.client.patient.request('QuestionnaireResponse', { 'pageLimit': 0, 'onPage': addResources }).then(() => {\n        setMessage(\"No QuestionnaireResponses Found for user with patientId: \" + props.client.patient.id);\n      });\n    } else {\n      setMessage(\"Invalid patient: No patientId provided\")\n    }\n\n  }, [props.client.patient])\n\n  const renderElements = () => {\n    let resourcesToRender = [];\n    if (checked) {\n      resourcesToRender = resources.filter((e) => {\n        return e.status === 'in-progress';\n      })\n    } else {\n      resourcesToRender = resources;\n    }\n    resourcesToRender.reverse();\n    return resourcesToRender;\n  }\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <div className={classes.spacer}>\n        </div>\n\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n          }}\n        >\n          <Toolbar />\n          <Box sx={{ overflow: 'auto', marginTop: '31px' }}>\n            <List>\n              {createIcons().map((option) => (\n                <div>\n                  <ListItem key={option[0]} style={option[2]} disablePadding>\n                    <ListItemButton>\n                      <ListItemIcon>\n                        {option[1]}\n                      </ListItemIcon>\n                      <ListItemText primaryTypographyProps={{ fontSize: '18px' }} primary={option[0]} />\n                    </ListItemButton>\n                  </ListItem>\n                  <Divider />\n                </div>\n\n              ))}\n            </List>\n          </Box>\n        </Drawer>\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n          <Toolbar />\n          <div className={classes.dashboardArea}>\n            <h2 className={classes.elementHeader}>\n              Available Forms\n            </h2>\n            <FormControlLabel style={{ float: 'right' }} control={\n              <Checkbox\n                checked={checked}\n                onChange={handleChange} />}\n              label=\"Only show in-progress forms\" />\n            {resources.length > 0 ?\n              renderElements().map((e) => {\n                return <DashboardElement key={e.id} status={e.status} resource={e} client={props.client} />\n              }) : <Paper className = {classes.dashboardElement}>{message}</Paper>}\n          </div>\n        </Box>\n      </Box>\n\n\n    </div>\n\n  );\n};\n\nexport default memo(Dashboard);\n","const headerDefinitions = {\n    alternativeTherapy: { \n        display: \"Alternative Therapy Cards Allowed\",\n        type: \"check\"\n    }, \n    baseUrl: { \n        display: \"Base Server\",\n        type: \"input\"\n    },\n    cdsUrl: { \n        display: \"REMS Admin\",\n        type: \"input\"\n    },\n    defaultUser: { \n        display: \"Default User\",\n        type: \"input\"\n    },\n    ehrUrl: { \n        display: \"EHR Server\",\n        type: \"input\"\n    },\n    includeConfig: { \n        display: \"Include Configuration in CRD Request\",\n        type: \"check\"\n    },\n    launchUrl: { \n        display: \"DTR Launch URL (QuestionnaireForm)\",\n        type: \"input\"\n    },\n    orderSelect: { \n        display: \"Order Select Rest End Point\",\n        type: \"input\"\n    },\n    orderSign: { \n        display: \"Order Sign Rest End Point\",\n        type: \"input\"\n    },\n    patientView: {\n        display: \"Patient View Rest End Point\",\n        type: \"input\",\n    },\n    pimsUrl: { \n        display: \"PIMS Server\",\n        type: \"input\"\n    },\n    responseExpirationDays: { \n        display: \"In Progress Form Expiration Days\",\n        type: \"input\"\n    },\n    sendPrefetch: { \n        display: \"Send Prefetch\",\n        type: \"check\"\n    },\n    smartAppUrl: { \n        display: \"SMART App\",\n        type: \"input\"\n    }\n}\n\nconst types = {\n    error: \"errorClass\",\n    info: \"infoClass\",\n    debug: \"debugClass\",\n    warning: \"warningClass\"\n}\n\nconst genderOptions = {\n    option1: {\n        text: \"Male\",\n        value: \"male\"\n    },\n    option2: {\n        text: \"Female\",\n        value: \"female\"\n    }\n}\n\nconst stateOptions = [\n    { key: 'AL', value: 'AL', text: 'Alabama' },\n    { key: 'AK', value: 'AK', text: 'Alaska' },\n    { key: 'AZ', value: 'AZ', text: 'Arizona' },\n    { key: 'AR', value: 'AR', text: 'Arkansas' },\n    { key: 'CA', value: 'CA', text: 'California' },\n    { key: 'CO', value: 'CO', text: 'Colorado' },\n    { key: 'CT', value: 'CT', text: 'Connecticut' },\n    { key: 'DE', value: 'DE', text: 'Delaware' },\n    { key: 'DC', value: 'DC', text: 'District Of Columbia' },\n    { key: 'FL', value: 'FL', text: 'Florida' },\n    { key: 'GA', value: 'GA', text: 'Georgia' },\n    { key: 'HI', value: 'HI', text: 'Hawaii' },\n    { key: 'ID', value: 'ID', text: 'Idaho' },\n    { key: 'IL', value: 'IL', text: 'Illinois' },\n    { key: 'IN', value: 'IN', text: 'Indiana' },\n    { key: 'IA', value: 'IA', text: 'Iowa' },\n    { key: 'KS', value: 'KS', text: 'Kansas' },\n    { key: 'KY', value: 'KY', text: 'Kentucky' },\n    { key: 'LA', value: 'LA', text: 'Louisiana' },\n    { key: 'ME', value: 'ME', text: 'Maine' },\n    { key: 'MD', value: 'MD', text: 'Maryland' },\n    { key: 'MA', value: 'MA', text: 'Massachusetts' },\n    { key: 'MI', value: 'MI', text: 'Michigan' },\n    { key: 'MN', value: 'MN', text: 'Minnesota' },\n    { key: 'MS', value: 'MS', text: 'Mississippi' },\n    { key: 'MO', value: 'MO', text: 'Missouri' },\n    { key: 'MT', value: 'MT', text: 'Montana' },\n    { key: 'NE', value: 'NE', text: 'Nebraska' },\n    { key: 'NV', value: 'NV', text: 'Nevada' },\n    { key: 'NH', value: 'NH', text: 'New Hampshire' },\n    { key: 'NJ', value: 'NJ', text: 'New Jersey' },\n    { key: 'NM', value: 'NM', text: 'New Mexico' },\n    { key: 'NY', value: 'NY', text: 'New York' },\n    { key: 'NC', value: 'NC', text: 'North Carolina' },\n    { key: 'ND', value: 'ND', text: 'North Dakota' },\n    { key: 'OH', value: 'OH', text: 'Ohio' },\n    { key: 'OK', value: 'OK', text: 'Oklahoma' },\n    { key: 'OR', value: 'OR', text: 'Oregon' },\n    { key: 'PA', value: 'PA', text: 'Pennsylvania' },\n    { key: 'RI', value: 'RI', text: 'Rhode Island' },\n    { key: 'SC', value: 'SC', text: 'South Carolina' },\n    { key: 'SD', value: 'SD', text: 'South Dakota' },\n    { key: 'TN', value: 'TN', text: 'Tennessee' },\n    { key: 'TX', value: 'TX', text: 'Texas' },\n    { key: 'UT', value: 'UT', text: 'Utah' },\n    { key: 'VT', value: 'VT', text: 'Vermont' },\n    { key: 'VA', value: 'VA', text: 'Virginia' },\n    { key: 'WA', value: 'WA', text: 'Washington' },\n    { key: 'WV', value: 'WV', text: 'West Virginia' },\n    { key: 'WI', value: 'WI', text: 'Wisconsin' },\n    { key: 'WY', value: 'WY', text: 'Wyoming' },\n  ]\n\n  const defaultValues = [\n    { key: 'CPAP', text: 'E0601', value: 'E0601', codeSystem: 'https://bluebutton.cms.gov/resources/codesystem/hcpcs' },\n    { key: 'Wheelchair', text: '97542', value: '97542', codeSystem: 'http://www.ama-assn.org/go/cpt' },\n    { key: 'Crutches', text: 'E0110', value: 'E0110', codeSystem: 'https://bluebutton.cms.gov/resources/codesystem/hcpcs' },\n    { key: 'Hospital Bed', text: 'E0250', value: 'E0250', codeSystem: 'https://bluebutton.cms.gov/resources/codesystem/hcpcs' },\n    { key: 'Continuous Glucose Monitoring', text: '95250', value: '95250', codeSystem: 'http://www.ama-assn.org/go/cpt' },\n    { key: 'Nebulizer', text: '94640', value:'94640', codeSystem: 'http://www.ama-assn.org/go/cpt' },\n    { key: 'Glucose Test Strip', text:'82947', value:'82947', codeSystem: 'http://www.ama-assn.org/go/cpt'},\n    { key: 'Oxygen Therapy', text: 'E0424', value:'E0424', codeSystem:'https://bluebutton.cms.gov/resources/codesystem/hcpcs' }\n]\n\nconst shortNameMap = {\n    \"http://www.ama-assn.org/go/cpt\":\"CPT\",\n    \"https://bluebutton.cms.gov/resources/codesystem/hcpcs\": \"HCPCS\",\n    \"http://www.nlm.nih.gov/research/umls/rxnorm\": \"RxNorm\",\n    \"http://hl7.org/fhir/sid/ndc\": \"NDC\"\n}\n\n  export {\n      defaultValues,\n      genderOptions,\n      headerDefinitions,\n      shortNameMap,\n      stateOptions,\n      types,\n  }","import React, { Component } from 'react';\nimport FHIR from \"fhirclient\";\nimport './card-list.css';\nimport { Button, Card, CardActions, CardContent, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport { retrieveLaunchContext } from '../../util/util';\nimport './displayBox.css';\n\nconst propTypes = {\n    /**\n     * A boolean to determine if the context of this component is under the Demo Card feature of the Sandbox, or in the actual\n     * hook views that render cards themselves. This flag is necessary to make links and suggestions unactionable in the Card Demo view.\n     */\n    isDemoCard: PropTypes.bool,\n    /**\n     * The FHIR access token retrieved from the authorization server. Used to retrieve a launch context for a SMART app\n     */\n    fhirAccessToken: PropTypes.object,\n    /**\n     * Function callback to take a specific suggestion from a card\n     */\n    takeSuggestion: PropTypes.func.isRequired,\n    /**\n     * Identifier of the Patient resource for the patient in context\n     */\n    patientId: PropTypes.string,\n    /**\n     * The FHIR server URL in context\n     */\n    fhirServerUrl: PropTypes.string,\n    /**\n     * The FHIR version in use\n     */\n    fhirVersion: PropTypes.string,\n    /**\n     * JSON response from a CDS service containing potential cards to display\n     */\n    cardResponses: PropTypes.object,\n  };\n\nexport default class DisplayBox extends Component{\n    constructor(props){\n        super(props);\n        this.launchLink = this.launchLink.bind(this);\n        this.launchSource = this.launchSource.bind(this);\n        this.renderSource = this.renderSource.bind(this);\n        this.modifySmartLaunchUrls = this.modifySmartLaunchUrls.bind(this);\n        this.exitSmart = this.exitSmart.bind(this);\n        this.state={\n            value: \"\",\n            smartLink: \"\",\n            response: {}\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if(JSON.stringify(nextProps.response) !== JSON.stringify(prevState.response)) {\n            return {\"response\":nextProps.response}\n        }else{ \n            return null;\n        }\n    }\n\n    shouldComponentUpdate(nextProps, prevState) {\n        if(JSON.stringify(nextProps.response) !== JSON.stringify(this.state.response) || this.state.smartLink !== prevState.smartLink) {\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    supportedRequesType(resource) {\n      let resourceType = resource.resourceType.toUpperCase();\n      if ( (resourceType === \"DEVICEREQUEST\") \n        || (resourceType === \"SERVICEREQUEST\") \n        || (resourceType === \"MEDICATIONREQUEST\")\n        || (resourceType === \"MEDICATIONDISPENSE\") ) {\n          return true;\n      }\n    }\n  /**\n   * Take a suggestion from a CDS service based on action on from a card. Also pings the analytics endpoint (if any) of the\n   * CDS service to notify that a suggestion was taken\n   * @param {*} suggestion - CDS service-defined suggestion to take based on CDS Hooks specification\n   * @param {*} url - CDS service endpoint URL\n   */\n  takeSuggestion(suggestion, url, buttonId, suggestionCount, cardNum, selectionBehavior) {\n    if (!this.props.isDemoCard) {\n      if (selectionBehavior === 'at-most-one') {\n        // disable all suggestion buttons for this card\n        for (var i = 0; i < suggestionCount; i++) {\n          let bId = \"suggestion_button-\"+cardNum+\"-\"+i;\n          document.getElementById(bId).setAttribute(\"disabled\", \"true\");\n        }\n      } else {\n        // disable this suggestion button if any are allowed\n        document.getElementById(buttonId).setAttribute(\"disabled\", \"true\");\n      }\n\n      if (suggestion.label) {\n        if (suggestion.uuid) {\n          axios({\n            method: 'POST',\n            url: `${url}/analytics/${suggestion.uuid}`,\n            data: {},\n          });\n        }\n\n        const client = FHIR.client({\n          serverUrl: this.props.ehrUrl,\n          tokenResponse: {\n            access_token: this.props.access_token.access_token,\n          },\n        });\n\n        // handle each action from the suggestion\n        var uri = '';\n        suggestion.actions.forEach((action) => {\n          if (action.type.toUpperCase() === \"DELETE\") {\n            uri = action.resource.resourceType + \"/\" + action.resource.id;\n            console.log(\"completing suggested action DELETE: \" + uri);\n            client.delete(uri).then((result) => {\n              console.log(\"suggested action DELETE result:\");\n              console.log(result);\n            });\n\n          } else if (action.type.toUpperCase() === \"CREATE\") {\n            uri = action.resource.resourceType;\n            console.log(\"completing suggested action CREATE: \" + uri);\n            client.create(action.resource).then((result) => {\n              console.log(\"suggested action CREATE result:\");\n              console.log(result);\n\n              if (this.supportedRequesType(result)) {\n                // call into the request builder to resubmit the CRD request with the suggested request\n                this.props.takeSuggestion(result);\n              }\n            });\n\n          } else if (action.type.toUpperCase() === \"UPDATE\") {\n            uri = action.resource.resourceType + \"/\" + action.resource.id;\n            console.log(\"completing suggested action UPDATE: \" + uri);\n            client.update(action.resource).then((result) => {\n              console.log(\"suggested action UPDATE result:\");\n              console.log(result);\n            });\n\n          } else {\n            console.log(\"WARNING: unknown action\");\n          }\n        });\n\n      } else {\n        console.error('There was no label on this suggestion', suggestion);\n      }\n    }\n  }\n\n  /**\n   * Prevent the source link from opening in the same tab\n   * @param {*} e - Event emitted when source link is clicked\n   */\n  launchSource(e, link) {\n    e.preventDefault();\n    window.open(link.url, '_blank');\n  }\n\n  exitSmart(e) {\n    this.setState({\"smartLink\":\"\"});\n  }\n  /**\n   * Open the absolute or SMART link in a new tab and display an error if a SMART link does not have\n   * appropriate launch context if used against a secured FHIR endpoint.\n   * @param {*} e - Event emitted when link is clicked\n   * @param {*} link - Link object that contains the URL and any error state to catch\n   */\n  launchLink(e, link) {\n    if (!this.props.isDemoCard) {\n      e.preventDefault();\n      if (link.error) {\n        // TODO: Create an error modal to display for SMART link that cannot be launched securely\n        return;\n      }\n        window.open(link.url, '_blank');\n\n    }\n  }\n\n  /**\n   * For SMART links, modify the link URLs as this component processes them according to two scenarios:\n   * 1 - Secured: Retrieve a launch context for the link and append a launch and iss parameter for use against secured endpoints\n   * 2 - Open: Append a fhirServiceUrl and patientId parameter to the link for use against open endpoints\n   * @param {*} card - Card object to process the links for\n   */\n  modifySmartLaunchUrls(card) {\n    if (!this.props.isDemoCard) {\n      return card.links.map((link) => {\n        let linkCopy = Object.assign({}, link);\n\n        if (link.type === 'smart' && (this.props.fhirAccessToken || this.props.ehrLaunch) && !this.state.smartLink) {\n          retrieveLaunchContext(\n            linkCopy, this.props.fhirAccessToken,\n            this.props.patientId, this.props.fhirServerUrl, this.props.fhirVersion\n          ).then((result) => {\n            linkCopy = result;\n            return linkCopy;\n          });\n        } else if (link.type === 'smart') {\n          if (link.url.indexOf('?') < 0) {\n            linkCopy.url += '?';\n          } else {\n            linkCopy.url += '&';\n          }\n          //linkCopy.url += `fhirServiceUrl=${this.props.fhirServerUrl}`;\n          //linkCopy.url += `&patientId=${this.props.patientId}`;\n        }\n        return linkCopy;\n      });\n    }\n    return undefined;\n  }\n\n  /**\n   * Helper function to build out the UI for the source of the Card\n   * @param {*} source - Object as part of the card to build the UI for\n   */\n    renderSource(source) {\n        if (!source.label) { return null; }\n        let icon;\n        if (source.icon) {\n          icon = <img className={'card-icon'} src={source.icon} alt=\"Could not fetch icon\" width=\"100\" height=\"100\" />;\n        }\n        if (!this.props.isDemoCard) {\n          return (\n            <div className='card-source'>\n              Source: <a className='source-link' href={source.url || '#'} onClick={e => this.launchSource(e, source)}>{source.label}</a>\n              {icon}\n            </div>\n          );\n        }\n        return (\n          <div className='card-source'>\n            Source:\n            <a\n              className='source-link'\n              href=\"#\"\n              onClick={e => this.launchSource(e, source)}\n            >\n              {source.label}\n            </a>\n            {icon}\n          </div>\n        );\n      }\n\n    render() {\n        this.buttonList = [];\n        const indicators = {\n            info: 0,\n            warning: 1,\n            'hard-stop': 2,\n            error: 3,\n          };\n      \n          const summaryColors = {\n            info: '#0079be',\n            warning: '#ffae42',\n            'hard-stop': '#c00',\n            error: '#333',\n          };\n          const renderedCards = [];\n          // Iterate over each card in the cards array\n          if(this.state.response!=null && this.state.response.cards!=null){\n            this.state.response.cards\n            .sort((b, a) => indicators[a.indicator] - indicators[b.indicator])\n            .forEach((c, cardInd) => {\n              const card = JSON.parse(JSON.stringify(c));\n      \n              // -- Summary --\n              const summarySection = <p>{card.summary}</p>;\n\n              // -- Source --\n              const sourceSection = card.source && Object.keys(card.source).length ? this.renderSource(card.source) : '';\n\n              // -- Detail (ReactMarkdown supports Github-flavored markdown) --\n              const detailSection = card.detail ? <div><ReactMarkdown source={card.detail} /></div> : <p style={{color: 'grey'}}>None</p>;\n      \n              // -- Suggestions --\n              let suggestionsSection = [];\n              if (card.suggestions) {\n                card.suggestions.forEach((item, ind) => {\n                  var buttonId = \"suggestion_button-\"+cardInd+\"-\"+ind;\n                  this.buttonList.push(buttonId);\n\n                  suggestionsSection.push(\n                    <Button\n                      key={ind}\n                      onClick={() => this.takeSuggestion(item, card.serviceUrl, buttonId, card.suggestions.length, cardInd, card.selectionBehavior)}\n                      variant=\"contained\"\n                      id={buttonId}\n                    >{item.label}</Button>\n                  );\n                });\n              }\n      \n              // -- Links --\n              let linksSection;\n              if (card.links) {\n                card.links = this.modifySmartLaunchUrls(card) || card.links;\n                linksSection = card.links.map((link, ind) => {\n                  if (link.type === 'smart') {\n                    return (\n                      <Button\n                      key={ind}\n                      variant=\"outlined\"\n                      onClick={e => this.launchLink(e, link)}\n                      >\n                        {link.label}\n                      </Button>\n                    )\n                  }\n                  const pdfIcon = <PictureAsPdfIcon />;\n                  return (\n                    <Button\n                      key={ind}\n                      onClick={e => this.launchLink(e, link)}\n                      endIcon={pdfIcon}\n                    >{link.label}</Button>)\n                  }\n                );\n              }\n    \n              const cardSectionHeaderStyle = { marginBottom: '2px', color: 'black' };\n\n              const builtCard = (\n                <Card variant='outlined' key={cardInd} className='decision-card alert-info'>\n                  <React.Fragment>\n                    <CardContent>\n                      <Typography style={cardSectionHeaderStyle} gutterBottom>\n                        Summary\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {summarySection}\n                      </Typography>\n                      <br/>\n                      <Typography style={cardSectionHeaderStyle}gutterBottom>\n                        Details\n                      </Typography>\n                      <Typography variant=\"div\">{detailSection}</Typography>\n                      <br/>\n                      <Typography variant=\"div\" gutterBottom>\n                        {sourceSection}\n                      </Typography>\n                    </CardContent>\n                    <CardActions className={'links-section'}>\n                      {linksSection}\n                    </CardActions>\n                  </React.Fragment>\n                </Card>);\n      \n              renderedCards.push(builtCard);\n            });\n\n            if (renderedCards.length === 0) {\n              return <div>\n                      Notification Cards ({renderedCards.length})\n                      </div>;\n            }\n            return <div>\n                    Notification Cards ({renderedCards.length})\n                    <div>\n                      {renderedCards}\n                    </div>\n                  </div>;\n          } else {\n            return <div>\n                  </div>;\n          }\n        }\n\n        componentDidUpdate() {\n          // clear the suggestion buttons\n          console.log(this.buttonList);\n          this.buttonList.forEach((requestButton, id) => {\n            document.getElementById(requestButton).removeAttribute(\"disabled\");\n          });\n        }\n      }\n","import { Button } from '@mui/material';\nimport React, {Component} from 'react';\n\nexport default class ConsoleBox extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            showStatus: \"hideConsole\",\n            headerStatus: \"collapseHeader\"\n            }\n\n            this.toggleConsole = this.toggleConsole.bind(this);\n\n        };\n\n\n        \n  handleAddition = (e, { value }) => {\n    this.setState({\n      options: [{ text: value, value }, ...this.state.options],\n    })\n  }\n\n  handleChange = (e, { value }) => {\n    this.props.updateCB(this.props.elementName, value)\n    this.setState({ currentValue: value })\n  }\n\n  toggleConsole(){\n      if(this.state.showStatus===\"showConsole\"){\n        this.setState({showStatus:\"hideConsole\"});\n        this.setState({headerStatus:\"collapseHeader\"});\n      }else{\n        this.setState({showStatus:\"showConsole\"});\n        this.setState({headerStatus:\"showHeader\"});\n      }\n  }\n\n  render() {\n\n    try{\n        var objDiv = document.getElementById(\"your_div\");\n        objDiv.scrollTop = objDiv.scrollHeight;\n    }catch(e){\n\n    }\n      let i = 0;\n    return (\n        <div>\n          <Button variant='outlined' className={this.state.headerStatus + \" consoleHeader\"} onClick={this.toggleConsole}>\n            {this.state.showStatus === 'showConsole' ? 'Close console' : 'Open Developer console' }\n          </Button>\n          <div id=\"your_div\" className = {this.state.showStatus + \" consoleMain resize\"}>\n              {this.props.logs.map(element => {\n                  i++;\n                  return <div key = {i}> <span className={element.type}>{element.content}</span></div>\n              }) }\n          </div>\n        </div>\n\n    )\n  }\n}","import React, {Component} from 'react';\n\n\nexport default class InputBox extends Component {\n    constructor(props){\n        super(props);\n        this.onInputChange = this.onInputChange.bind(this);\n    }\n\n    onInputChange(event){\n        this.props.updateCB(this.props.elementName, event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n            <input\n            className={\"form-control input-text \" + this.props.extraClass}\n            name={this.props.elementName}\n            value={this.props.value}\n            onChange={this.onInputChange}\n            />\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props);\n        this.onInputChange = this.onInputChange.bind(this);\n    }\n\n    onInputChange(_event) {\n        this.props.updateCB(this.props.elementName, !this.props.toggle);\n    }\n\n    render() {\n        const toggleClass = (this.props.toggle ? \"checkBoxClicked\" : \"checkBox\");\n        const indicatorClass = this.props.toggle ? \"onOffActive\" : \"onOff\";\n        return (\n            <span>\n            <button\n            className={toggleClass +\" btn-class btn \" + this.props.extraClass}\n            name={this.props.elementName}\n            onClick={this.onInputChange}\n            >{this.props.displayName} <span className={indicatorClass + \" onOffState \" + this.props.extraInnerClass}/></button>\n            </span>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './SettingsBox.css';\nimport InputBox from '../Inputs/InputBox';\nimport CheckBox from '../Inputs/CheckBox';\nimport { headerDefinitions, types } from '../../util/data'\nimport FHIR from \"fhirclient\";\n\nconst clearQuestionnaireResponses = ({ ehrUrl, defaultUser, access_token }, consoleLog) => (_event) => {\n    console.log(\"Clear QuestionnaireResponses from the EHR: \" + ehrUrl + \" for author \" + defaultUser);\n    const client = FHIR.client({ \n        serverUrl: ehrUrl, \n        ...(access_token ? { tokenResponse: access_token } : {})\n    });\n    client\n        .request(\"QuestionnaireResponse?author=\" + defaultUser, { flat: true })\n        .then((result) => {\n            console.log(result);\n            result.forEach((resource) => {\n                console.log(resource.id);\n                client\n                    .delete(\"QuestionnaireResponse/\" + resource.id)\n                    .then((result) => {\n                        consoleLog(\"Successfully deleted QuestionnaireResponse \" + resource.id + \" from EHR\", types.info);\n                        console.log(result);\n                    })\n                    .catch((e) => {\n                        console.log(\"Failed to delete QuestionnaireResponse \" + resource.id);\n                        console.log(e);\n                    });\n            });\n        })\n        .catch((e) => {\n            console.log(\"Failed to retrieve list of QuestionnaireResponses\");\n            console.log(e);\n        });\n};\n\nconst resetPims = ({ pimsUrl }, consoleLog) => (_event) => {\n    let url = new URL(pimsUrl);\n    const resetUrl = url.origin + \"/doctorOrders/api/deleteAll\";\n    console.log(\"reset pims: \" + resetUrl);\n    \n    fetch(resetUrl, {\n        method: 'DELETE',\n    })\n    .then(response => {\n        console.log(\"Reset pims: \");\n        console.log(response);\n        consoleLog(\"Successfully reset pims database\", types.info);\n    })\n    .catch(error => {\n        console.log(\"Reset pims error: \");\n        consoleLog(\"Server returned error when resetting pims: \", types.error);\n        consoleLog(error.message);\n        console.log(error);\n    });\n}\n\nconst resetRemsAdmin = ({ cdsUrl } , consoleLog) => (_event) => {\n    let url = new URL(cdsUrl);\n    const resetUrl = url.origin + \"/etasu/reset\";\n\n    fetch(resetUrl, {\n        method: 'POST',\n    })\n    .then(response => {\n        console.log(\"Reset rems admin etasu: \");\n        console.log(response);\n        consoleLog(\"Successfully reset rems admin etasu\", types.info);\n    })\n    .catch(error => {\n        console.log(\"Reset rems admin error: \");\n        consoleLog(\"Server returned error when resetting rems admin etasu: \", types.error);\n        consoleLog(error.message);\n        console.log(error);\n    });\n}\n\nconst resetHeaderDefinitions = [\n    {\n        display: \"Clear EHR QuestionnaireResponses\",\n        key: \"clearQuestionnaireResponses\",\n        reset: clearQuestionnaireResponses\n    },\n    {\n        display: \"Reset PIMS Database\",\n        key: \"resetPims\",\n        reset: resetPims\n    },\n    {\n        display: \"Reset REMS-Admin Database\",\n        key: \"resetRemsAdmin\",\n        reset: resetRemsAdmin\n    },\n];\n\nexport default class SettingsBox extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() { }\n\n    render() {\n        const { state, consoleLog, updateCB } = this.props;\n\n        const headers = Object.keys(headerDefinitions)\n            .map(key => ({ ...headerDefinitions[key], key }))\n            // Display the fields in descending order of type. If two fields are the same type, then sort by ascending order of display text.\n            .sort((self, other) => -self.type.localeCompare(other.type) || self.display.localeCompare(other.display));\n\n        return (\n            <div>\n                {headers.map(({ key, type, display }) => {\n                    switch(type) {\n                        case \"input\":\n                            return <div key={key}>\n                                <p className=\"setting-header\">{display}</p>\n                                <InputBox \n                                    extraClass = \"setting-input\"\n                                    value = {state[key]}\n                                    updateCB = {updateCB}\n                                    elementName = {key}/>\n                            </div>\n                        case \"check\":\n                            return <div key={key}>\n                                <p className=\"setting-header\">{display}\n                                <CheckBox\n                                    extraClass = \"setting-checkbox\"\n                                    extraInnerClass = \"setting-inner-checkbox\"\n                                    toggle = {state[key]}\n                                    updateCB={updateCB}\n                                    elementName = {key} />\n                                    </p>\n                                <p>&nbsp;</p>\n                            </div>\n                        default:\n                            return <div key={key}><p className=\"setting-header\">{display}</p></div>\n                    }\n                })}\n                {resetHeaderDefinitions.map(({ key, display, reset }) => {\n                    return <div key={key}>\n                        <button className={\"setting-btn btn btn-class\"} onClick={reset(state, consoleLog)}>{display}</button>\n                    </div>\n                })}\n            </div>\n\n        )\n    }\n}","function fhir(resource, ehrUrl, patient, auth) {\n    const headers = {\n        \"Content-Type\": \"application/json\"\n    }\n    if(patient) {\n        fetch(`${ehrUrl}${resource}?subject=Patient/${patient}`, {\n            method: \"GET\",\n            headers: headers,\n        }).then(response => {\n            return response.json();\n        }).then(json =>{\n            console.log(json);\n        });\n    }\n\n}\n\nfunction getAge(dateString) {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    return age;\n}\n\nexport {\n    fhir,\n    getAge\n}","import React, { Component } from \"react\";\nimport { getAge } from \"../../util/fhir\";\nimport FHIR from \"fhirclient\";\nimport \"./smart.css\";\nimport { Button, IconButton } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\n\nexport default class PatientBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      request: \"\",\n      deviceRequests: {},\n      medicationRequests: {},\n      serviceRequests: {},\n      medicationDispenses: {},\n      response: \"\",\n      questionnaireResponses: {},\n      openRequests: false,\n      openQuestionnaires: false\n    };\n\n    this.handleRequestChange = this.handleRequestChange.bind(this);\n\n    this.updatePrefetchRequest = this.updatePrefetchRequest.bind(this);\n    this.getDeviceRequest = this.getDeviceRequest.bind(this);\n    this.getServiceRequest = this.getServiceRequest.bind(this);\n    this.getMedicationRequest = this.getMedicationRequest.bind(this);\n    this.getMedicationDispense = this.getMedicationDispense.bind(this);\n    this.getRequests = this.getRequests.bind(this);\n    this.getResponses = this.getResponses.bind(this);\n    this.makeQROption = this.makeQROption.bind(this);\n    this.handleResponseChange = this.handleResponseChange.bind(this);\n    this.makeDropdown = this.makeDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    // get requests and responses on open of patients\n    this.getRequests()\n    this.getResponses();\n  }\n\n  getCoding(request) {\n    let code = null;\n    if (request.resourceType === \"DeviceRequest\") {\n      code = request.codeCodeableConcept.coding[0];\n    } else if (request.resourceType === \"ServiceRequest\") {\n      code = request.code.coding[0];\n    } else if (request.resourceType === \"MedicationRequest\"\n      || request.resourceType === \"MedicationDispense\") {\n      code = request.medicationCodeableConcept.coding[0];\n    }\n    if (code) {\n      if (!code.code) {\n        code.code = \"Unknown\";\n      }\n      if (!code.display) {\n        code.display = \"Unknown\";\n      }\n      if (!code.system) {\n        code.system = \"Unknown\";\n      }\n    } else {\n      code.code = \"Unknown\";\n      code.display = \"Unknown\";\n      code.system = \"Unknown\";\n    }\n    return code;\n  }\n\n  makeDropdown(options, label, stateVar, stateChange) {\n    console.log(options);\n    return (\n      <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          labelId = {`${label}-label`}\n          value= {stateVar}\n          label={label}\n          data-testid=\"dropdown-box\"\n          onChange={stateChange}\n        >\n          {options.map((op) => {\n            return <MenuItem key = {op.key} value = {op.value}>{op.text}</MenuItem>\n          })}\n        </Select>\n      </FormControl>\n    </Box>\n    )\n  }\n  makeOption(request, options) {\n    let code = this.getCoding(request);\n\n    let option = {\n      key: request.id,\n      text: code.display + \" (Medication request: \" + code.code + \")\",\n      value: JSON.stringify(request)\n    }\n    options.push(option);\n  }\n\n  updateValues(patient) {\n    this.props.callback(\"patient\", patient);\n    this.props.callback(\"openPatient\", false);\n    this.props.clearCallback();\n    if (this.state.request) {\n      const request = JSON.parse(this.state.request);\n      if (request.resourceType === \"DeviceRequest\" || request.resourceType === \"ServiceRequest\" || request.resourceType === \"MedicationRequest\" || request.resourceType === \"MedicationDispense\") {\n        this.updatePrefetchRequest(request, patient, this.props.defaultUser);\n      } else {\n        this.props.clearCallback();\n      }\n    }\n    else {\n      this.updatePrefetchRequest(null, patient, this.props.defaultUser);\n    }\n\n    if (this.state.response) {\n      const response = JSON.parse(this.state.response);\n      this.updateQRResponse(patient, response);\n    }\n  }\n\n  updateQRResponse(patient, response) {\n    this.props.callback(\"response\", response);\n  }\n\n  fetchResources(queries) {\n    console.log(queries);\n    var requests = [];\n    this.props.callback(\"prefetchCompleted\", false);\n    queries.forEach((query, queryKey) => {\n      const urlQuery = this.props.ehrUrl + '/' + query;\n      requests.push(fetch(urlQuery, {\n        method: \"GET\",\n      }).then((response) => {\n        const responseJson = response.json()\n        return responseJson;\n      }).then((resource) => {\n        this.props.callbackMap(\"prefetchedResources\", queryKey, resource);\n      }));\n    });\n\n    Promise.all(requests)\n    .then((results) => {\n      console.log(\"fetchResourcesSync: finished\")\n      this.props.callback(\"prefetchCompleted\", true);\n    }).catch(function(err) {\n      console.log(\"fetchResourcesSync: failed to wait for all the prefetch to populate\");\n      console.log(err);\n    }) \n  }\n\n  updatePrefetchRequest(request, patient, user) {\n    const patientReference = \"Patient/\"+patient?.id;\n    const userReference = \"Practitioner/\"+user;\n    if (request) {\n      this.props.callback(request.resourceType, request);\n      var queries = this.props.updatePrefetchCallback(request, patientReference, userReference, \"request\", \"patient\", \"practitioner\");\n      this.fetchResources(queries);\n\n      this.props.callback(\"request\", request);\n      const coding = this.getCoding(request);\n      this.props.callback(\"code\", coding.code);\n      this.props.callback(\"codeSystem\", coding.system);\n      this.props.callback(\"display\", coding.display);\n    } else {\n      var queries = this.props.updatePrefetchCallback(request, patientReference, userReference, \"patient\", \"practitioner\", \"medicationRequests\");\n      this.fetchResources(queries);\n    }\n  }\n\n  getDeviceRequest(patientId, client) {\n    client\n      .request(`DeviceRequest?subject=Patient/${patientId}`, {\n        resolveReferences: [\"subject\", \"performer\"],\n        graph: false,\n        flat: true,\n      })\n      .then((result) => {\n        this.setState({ deviceRequests: result });\n      });\n  }\n\n  getServiceRequest(patientId, client) {\n    client\n      .request(`ServiceRequest?subject=Patient/${patientId}`, {\n        resolveReferences: [\"subject\", \"performer\"],\n        graph: false,\n        flat: true,\n      })\n      .then((result) => {\n        this.setState({ serviceRequests: result });\n      });\n  }\n\n  getMedicationRequest(patientId, client) {\n    client\n      .request(`MedicationRequest?subject=Patient/${patientId}`, {\n        resolveReferences: [\"subject\", \"performer\"],\n        graph: false,\n        flat: true,\n      })\n      .then((result) => {\n        this.setState({ medicationRequests: result });\n      });\n  }\n\n  getMedicationDispense(patientId, client) {\n    client\n      .request(`MedicationDispense?subject=Patient/${patientId}`, {\n        resolveReferences: [\"subject\", \"performer\"],\n        graph: false,\n        flat: true,\n      })\n      .then((result) => {\n        this.setState({ medicationDispenses: result });\n      });\n  }\n\n  handleRequestChange(e) {\n    const data = e.target.value;\n    if (data) {\n      let coding = this.getCoding(JSON.parse(data));\n      this.setState({\n        request: data,\n        code: coding.code,\n        system: coding.system,\n        display: coding.display,\n        response: \"\"\n      });\n    } else {\n      this.setState({\n        request: \"\"\n      });\n    }\n  }\n\n  handleResponseChange(e) {\n    const data = e.target.value;\n    if (data) {\n      this.setState({\n        response: data\n      });\n    } else {\n      this.setState({\n        response: \"\"\n      });\n    }\n  }\n\n  getRequests() {\n    const client = FHIR.client(\n      this.props.params\n    );\n    const patientId = this.props.patient.id;\n    this.getDeviceRequest(patientId, client);\n    this.getServiceRequest(patientId, client);\n    this.getMedicationRequest(patientId, client);\n    this.getMedicationDispense(patientId, client);\n  }\n\n  /**\n   * Retrieve QuestionnaireResponse \n   */\n  getResponses() {\n    const client = FHIR.client(\n      this.props.params\n    );\n    const patientId = this.props.patient.id;\n\n    let updateDate = new Date();\n    updateDate.setDate(updateDate.getDate() - this.props.responseExpirationDays);\n    client\n      .request(`QuestionnaireResponse?_lastUpdated=gt${updateDate.toISOString().split('T')[0]}&status=in-progress&subject=Patient/${patientId}`, {\n        resolveReferences: [\"subject\"],\n        graph: false,\n        flat: true,\n      })\n      .then((result) => {\n        this.setState({ questionnaireResponses: result });\n      });\n  }\n\n  makeQROption(qr, options) {\n    const display = `${qr.questionnaire}: created at ${qr.authored}`;\n    let option = {\n      key: qr.id,\n      text: display,\n      value: JSON.stringify(qr)\n    }\n    options.push(option);\n  }\n\n  render() {\n    const patient = this.props.patient;\n    let name = \"\";\n    if (patient.name) {\n      name = (\n        <span> {`${patient.name[0].given[0]} ${patient.name[0].family}`} </span>\n      );\n    }\n\n    // add all of the requests to the list of options\n    let options = []\n    let responseOptions = [];\n    let returned = false;\n    if (this.state.deviceRequests.data) {\n      returned = true;\n      this.state.deviceRequests.data.forEach((e) => {\n        this.makeOption(e, options);\n      });\n    }\n    if (this.state.serviceRequests.data) {\n      returned = true;\n      this.state.serviceRequests.data.forEach((e) => {\n        this.makeOption(e, options);\n      });\n    }\n    if (this.state.medicationRequests.data) {\n      returned = true;\n      this.state.medicationRequests.data.forEach((e) => {\n        this.makeOption(e, options);\n      });\n    }\n\n    if (this.state.medicationDispenses.data) {\n      returned = true;\n      this.state.medicationDispenses.data.forEach((e) => {\n        this.makeOption(e, options);\n      })\n    };\n\n    if (this.state.questionnaireResponses.data) {\n      this.state.questionnaireResponses.data.forEach(qr => this.makeQROption(qr, responseOptions));\n      returned = true;\n    }\n\n    let noResults = 'No results found.'\n    if (!returned) {\n      noResults = 'Loading...';\n    }\n\n    return (\n      <div key = {patient.id} className=\"patient-box\">\n        <div className=\"patient-header\">\n          <span style={{fontWeight: 'bolder'}}>{name ? name : \"N/A\"}</span> {`(ID: ${patient.id})`}\n        </div>\n        <div\n          className=\"patient-selection-box\"\n        >\n          <div className=\"patient-info\">\n            <div>\n              <span style={{ fontWeight: \"bold\" }}>Gender</span>:{\" \"}\n              {patient.gender}\n            </div>\n            <div>\n              <span style={{ fontWeight: \"bold\" }}>Age</span>:{\" \"}\n              {getAge(patient.birthDate)}\n            </div>\n          </div>\n          <div className=\"request-info\">\n            <span style={{ fontWeight: \"bold\", marginRight: \"5px\", padding: \"5px\" }}>\n              Request:\n            </span>\n            { !options.length && returned ?\n              <span className=\"emptyForm\">No requests</span>\n            : \n              this.makeDropdown(options, \"Choose a patient\", this.state.request, this.handleRequestChange)\n            }\n          </div>\n          <div className=\"request-info\">\n            <span style={{ fontWeight: \"bold\", marginRight: \"5px\", padding: \"5px\"}}>\n              In Progress Form:\n              <IconButton color=\"primary\" style={{ padding: '0px 5px' }} onClick={this.getResponses}>\n                <RefreshIcon />\n              </IconButton> \n            </span>\n            { !responseOptions.length && returned ?\n              <span className=\"emptyForm\">No in progress forms</span> :\n              this.makeDropdown(responseOptions, \"Choose an in-progress form\", this.state.response, this.handleResponseChange)\n            }\n          </div>\n          <Button variant=\"outlined\" size=\"small\" className=\"select-btn\" onClick={() => this.updateValues(patient)}>Select</Button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* 2017071 NCPDP SCRIPT Support */\n\n  function xmlAddTextNode(xmlDoc, parent, sectionName, value) {\n    var section = xmlDoc.createElement(sectionName);\n    var textNode = xmlDoc.createTextNode(value);\n    section.appendChild(textNode);\n    parent.appendChild(section);\n  }\n\n  function buildNewRxName(doc, nameResource) {\n    var name = doc.createElement(\"Name\");\n    xmlAddTextNode(doc, name, \"LastName\", nameResource.family);\n    xmlAddTextNode(doc, name, \"FirstName\", nameResource.given[0]);\n    return name;\n  }\n\n  function buildNewRxAddress(doc, addressResource) {\n    var address = doc.createElement(\"Address\");\n    xmlAddTextNode(doc, address, \"AddressLine1\", addressResource.line[0]);\n    xmlAddTextNode(doc, address, \"City\", addressResource.city);\n    xmlAddTextNode(doc, address, \"StateProvince\", addressResource.state);\n    xmlAddTextNode(doc, address, \"PostalCode\", addressResource.postalCode);\n    xmlAddTextNode(doc, address, \"Country\", \"US\"); // assume US for now\n    return address;\n  }\n\n  function buildNewRxPatient(doc, patientResource) {\n    var patient = doc.createElement(\"Patient\");\n    var humanPatient = doc.createElement(\"HumanPatient\");\n\n    //     Patient Name\n    const patientNameResource = patientResource.name[0];\n    humanPatient.appendChild(buildNewRxName(doc, patientNameResource));\n\n    //     Patient Gender and Sex\n    var gender = \"U\"; // unknown\n    var patientResourceGender = patientResource.gender.toLowerCase();\n    if (patientResourceGender === \"male\") {\n      gender = \"M\"; // male\n    } else if (patientResourceGender === \"female\") {\n      gender = \"F\"; // female\n    } else if (patientResourceGender === \"other\") {\n      gender = \"N\"; // non-binary\n    }\n    xmlAddTextNode(doc, humanPatient, \"Gender\", gender);\n\n    //     Patient Birth Date\n    var dateOfBirth = doc.createElement(\"DateOfBirth\");\n    xmlAddTextNode(doc, dateOfBirth, \"Date\", patientResource.birthDate);\n    humanPatient.appendChild(dateOfBirth);\n\n    //     Patient Address\n    const patientAddressResource = patientResource.address[0];\n    humanPatient.appendChild(buildNewRxAddress(doc, patientAddressResource));\n\n    patient.appendChild(humanPatient);\n    return patient;\n  }\n\n  function buildNewRxPrescriber(doc, practitionerResource) {\n    var prescriber = doc.createElement(\"Prescriber\");\n    var nonVeterinarian = doc.createElement(\"NonVeterinarian\");\n\n    //     Prescriber Identifier\n    for (let i = 0; i < practitionerResource.identifier.length; i++) {\n      let id = practitionerResource.identifier[i];\n      if ((id.system) && (id.system.includes(\"us-npi\"))) {\n        var identification = doc.createElement(\"Identification\");\n        xmlAddTextNode(doc, identification, \"NPI\", id.value);\n        nonVeterinarian.appendChild(identification);\n      }\n    }\n\n    //     Prescriber Name\n    const practitionerNameResource = practitionerResource.name[0];\n    nonVeterinarian.appendChild(buildNewRxName(doc, practitionerNameResource));\n\n    //     Prescriber Address\n    const practitionerAddressResource = practitionerResource.address[0];\n    nonVeterinarian.appendChild(buildNewRxAddress(doc, practitionerAddressResource));\n\n    //     Prescriber Phone Number and Email\n    var communicationNumbers = doc.createElement(\"CommunicationNumbers\");\n    for (let i = 0; i < practitionerResource.telecom.length; i++) {\n      const telecom = practitionerResource.telecom[i];\n      if (telecom.system === \"phone\") {\n        var primaryTelephone = doc.createElement(\"PrimaryTelephone\");\n        xmlAddTextNode(doc, primaryTelephone, \"Number\", telecom.value);\n        communicationNumbers.appendChild(primaryTelephone);\n      } else if (telecom.system === \"email\") {\n        xmlAddTextNode(doc, communicationNumbers, \"ElectronicMail\", telecom.value);\n      }\n    }\n    nonVeterinarian.appendChild(communicationNumbers)\n\n    prescriber.appendChild(nonVeterinarian);\n    return prescriber;\n  }\n\n  function quantityUnitOfMeasureFromDrugFormCode(dispenseRequest) {\n    // Switch on Orderable Drug Form codes from: \n    // https://terminology.hl7.org/5.0.0/CodeSystem-v3-orderableDrugForm.html\n    // Return NCPDP QuantityUnitOfMeasure\n    if (dispenseRequest.quantity.system.toLowerCase().endsWith(\"v3-orderableDrugForm\".toLowerCase())) {\n      // is a subset of the codes, not a complete list\n      switch (dispenseRequest.quantity.code.toUpperCase()) {\n        case \"APPFUL\": // Applicatorful\n        case \"FOAMAPL\": // Foam with Applicator\n        case \"VAGFOAMAPL\": // Vaginal Foam with Applicator\n        case \"VAGCRMAPL\": // Vaginal Cream with Applicator\n        case \"OINTAPL\": // Ointment with Applicator\n        case \"VAGOINTAPL\": // Vaginal Ointment with Applicator\n        case \"GELAPL\": // Gel with Applicator\n        case \"VGELAPL\": // Vaginal Gel with Applicator\n          return \"C62412\";  // Applicator\n        //case \"\":\n        //  return \"C54564\"  // Blister\n        case \"CAPLET\": // Caplet\n          return \"C64696\";  // Caplet\n        case 'CAP': // Capsule\n          return \"C48480\";  // Capsule\n        //case \"\":\n        //  return \"C64933\"  // Each\n        //case \"\":\n        //  return \"C53499\"  // Film\n        //case \"\":\n        //  return \"C48155\"  // Gram\n        case \"GUM\": // Chewing Gum\n          return \"C69124\";  // Gum\n        //case \"\":\n        //  return \"C48499\"  // Implant\n        //case \"\":\n        //  return \"C62276\"  // Insert\n        //case \"\":\n        //  return \"C48504\"  // Kit\n        //case \"\":\n        //  return \"C120263\" // Lancet\n        case \"ORTROCHE\": // Lozenge/Oral Troche\n          return \"C48506\";  // Lozenge\n        //case \"\":\n        //  return \"C28254\"  // Milliliter\n        //case \"\":\n        //  return \"C48521\"  // Packet\n        case \"PAD\": // Pad\n        case \"MEDPAD\": // Medicated Pad\n          return \"C65032\";  // Pad\n        case \"PATCH\": // Patch\n        case \"TPATCH\": // Transdermal Patch\n        case \"TPATH16\": // 16 Hour Transdermal Patch\n        case \"TPATH24\": // 24 Hour Transdermal Patch\n        case \"TPATH2WK\": // Biweekly Transdermal Patch\n        case \"TPATH72\": // 72 Hour Transdermal Patch\n        case \"TPATHWK\": // Weekly Hour Transdermal Patch\n          return \"C48524\";  // Patch\n        //case \"\":\n        //  return \"C120216\" // Pen Needle\n        //case \"\":\n        //  return \"C62609\"  // Ring\n        // case \"\":\n        //   return \"C53502\"  // Sponge\n        //case \"\":\n        //  return \"C53503\"  // Stick\n        //case \"\":\n        //  return \"C48538\"  // Strip\n        case \"SUPP\": // Suppository\n        case \"RECSUPP\": // Rectal Suppository\n        case \"URETHSUPP\": // Urethral Suppository\n        case \"VAGSUPP\": // Vaginal Suppository\n          return \"C48539\";  // Suppository\n        case \"SWAB\": // Swab\n        case \"MEDSWAB\": // Medicated Swab\n          return \"C53504\";  // Swab\n        case \"TAB\": // Tablet\n        case \"ORTAB\": // Oral Tablet\n        case \"BUCTAB\": // Buccal Tablet\n        case \"SRBUCTAB\": // Sustained Release Buccal Tablet\n        case \"CHEWTAB\": // Chewable Tablet\n        case \"CPTAB\": // Coated Particles Tablet\n        case \"DISINTTAB\": // Disintegrating Tablet\n        case \"DRTAB\": // Delayed Release Tablet\n        case \"ECTAB\": // Enteric Coated Tablet\n        case \"ERECTTAB\": // Extended Release Enteric Coated Tablet\n        case \"ERTAB\": // Extended Release Tablet\n        case \"ERTAB12\": // 12 Hour Extended Release Tablet\n        case \"ERTAB24\": // 24 Hour Extended Release Tablet\n        case \"SLTAB\": // Sublingual Tablet\n        case \"VAGTAB\": // Vaginal Tablet\n          return \"C48542\";  // Tablet\n        //case \"\":\n        //  return \"C48548\"  // Troche\n        case \"WAFER\": // Wafer\n          return \"C48552\";  // Wafer\n        default:\n          return \"C38046\"; // Unspecified\n      }\n    }\n    return \"C38046\";       // unspecified\n  }\n\n  function buildNewRxMedication(doc, medicationRequestResource) {\n    var medicationPrescribed = doc.createElement(\"MedicationPrescribed\");\n\n    //     Medication Product\n    var drugCoded = doc.createElement(\"DrugCoded\");\n\n    // loop through the coding values and find the ndc code and the rxnorm code\n    const medicationCodingList = medicationRequestResource.medicationCodeableConcept.coding;\n    for (let i = 0; i < medicationCodingList.length; i++) {\n      const coding = medicationCodingList[i];\n      const system = coding.system.toLowerCase();\n\n      if (system.endsWith(\"rxnorm\")) {\n        //     Medication Drug Description\n        xmlAddTextNode(doc, medicationPrescribed, \"DrugDescription\", coding.display);\n\n      } else if (system.endsWith(\"ndc\")) {\n        //     Medication Drug Code\n        var productCode = doc.createElement(\"ProductCode\");\n        xmlAddTextNode(doc, productCode, \"Code\", coding.code);\n        xmlAddTextNode(doc, productCode, \"Qualifier\", \"ND\"); // National Drug Code (NDC)\n        drugCoded.appendChild(productCode);\n      }\n    }\n\n    medicationPrescribed.appendChild(drugCoded);\n\n    //     Medication Quantity\n    const dispenseRequest = medicationRequestResource.dispenseRequest;\n    var quantity = doc.createElement(\"Quantity\");\n    xmlAddTextNode(doc, quantity, \"Value\", dispenseRequest.quantity.value);\n    xmlAddTextNode(doc, quantity, \"CodeListQualifier\", 38); // Original Quantity\n    var quantityUnitOfMeasure = doc.createElement(\"QuantityUnitOfMeasure\");\n    xmlAddTextNode(doc, quantityUnitOfMeasure, \"Code\", quantityUnitOfMeasureFromDrugFormCode(dispenseRequest));\n    quantity.appendChild(quantityUnitOfMeasure);\n    medicationPrescribed.appendChild(quantity);\n\n    //     Medication Written Date\n    var writtenDate = doc.createElement(\"WrittenDate\");\n    xmlAddTextNode(doc, writtenDate, \"Date\", medicationRequestResource.authoredOn);\n    medicationPrescribed.appendChild(writtenDate);\n\n    //     Medication Substitutions (0 - None)\n    xmlAddTextNode(doc, medicationPrescribed, \"Substitutions\", 0);\n\n    //     Medication NumberOfRefills (0 - None)\n    xmlAddTextNode(doc, medicationPrescribed, \"NumberOfRefills\", dispenseRequest.numberOfRepeatsAllowed);\n\n    //     Medication Sig\n    var sig = doc.createElement(\"Sig\");\n    xmlAddTextNode(doc, sig, \"SigText\", medicationRequestResource.dosageInstruction[0].text);\n    medicationPrescribed.appendChild(sig);\n\n    //     Medication REMS\n    // A - Prescriber has checked REMS and the prescriber's actions have been completed.\n    // B - Prescriber has checked REMS and the prescriber's actions are not yet completed.\n    // N - Prescriber has not checked REMS.\n    xmlAddTextNode(doc, medicationPrescribed, \"PrescriberCheckedREMS\", \"B\");\n\n    return medicationPrescribed;\n  }\n\n  export default function buildNewRxRequest(patientResource, practitionerResource, medicationRequestResource) {\n    var doc = document.implementation.createDocument(\"\", \"\", null);\n    var message = doc.createElement(\"Message\");\n\n    // Header\n    var header = doc.createElement(\"Header\");\n    // generate the message id (just get the milliseconds since epoch and use that)\n    const d1 = new Date();\n    const messageIdValue = d1.getTime();\n    xmlAddTextNode(doc, header, \"MessageID\", messageIdValue);\n    message.appendChild(header);\n\n    // Body\n    var body = doc.createElement(\"Body\");\n    var newRx = doc.createElement(\"NewRx\");\n\n    //   Patient\n    newRx.appendChild(buildNewRxPatient(doc, patientResource));\n\n    //   Prescriber\n    newRx.appendChild(buildNewRxPrescriber(doc, practitionerResource));\n\n    //   Medication\n    newRx.appendChild(buildNewRxMedication(doc, medicationRequestResource));\n\n    body.appendChild(newRx);\n    message.appendChild(body);\n\n    doc.appendChild(message);\n\n    return doc;\n  }","// Prefetch Template Source:\n// https://build.fhir.org/ig/HL7/davinci-crd/hooks.html#prefetch\nexport class PrefetchTemplate {\n\n  static generatePrefetchMap() {\n\n    const prefetchMap = new Map();\n\n    const PRACTITIONER_PREFETCH = new PrefetchTemplate(\n      \"{{context.userId}}\");\n\n    const REQUEST_PREFETCH = new PrefetchTemplate(\n      \"MedicationRequest/{{context.medications.MedicationRequest.id}}\");\n    const PATIENT_PREFETCH = new PrefetchTemplate(\"{{context.patientId}}\");\n\n    const ALL_REQUESTS_PREFETCH = new PrefetchTemplate(\n      \"MedicationRequest?subject={{context.patientId}}\");\n\n    // prefetchMap.set(\"Coverage\", COVERAGE_PREFETCH_QUERY);\n    prefetchMap.set(\"request\", REQUEST_PREFETCH);\n    prefetchMap.set(\"practitioner\", PRACTITIONER_PREFETCH);\n    prefetchMap.set(\"patient\", PATIENT_PREFETCH);\n    prefetchMap.set(\"medicationRequests\", ALL_REQUESTS_PREFETCH);\n    // prefetchMap.set(\"ServiceRequest\", SERVICE_REQUEST_BUNDLE);\n    // prefetchMap.set(\"Encounter\", ENCOUNTER_BUNDLE);\n\n    return prefetchMap;\n  }\n\n  static generateParamElementMap() {\n    const paramElementMap = new Map();\n    // TODO - this should just be inferred based on context.  Or rather\n    // the instructions from the hook about what context to fill in\n    // Quite literally, the \"context\" here refers to the \"context\" of the\n    // cds-hook, which as of now is just hard-coded in buildRequest.js\n    // Rather than do this, which searches the request resource for information,\n    // the cds-hook should be constructed and then the context used to actually make\n    // the appropriate requests.\n    paramElementMap.set('context.userId', ['requester', 'reference'])\n    paramElementMap.set('context.draftOrders.DeviceRequest.id', ['id']);\n    paramElementMap.set('context.medications.MedicationRequest.id', ['id']);\n    paramElementMap.set('context.medications.MedicationDispense.id', ['id']);\n    paramElementMap.set('context.draftOrders.NutritionOrder.id', ['id']);\n    paramElementMap.set('context.draftOrders.ServiceRequest.id', ['id']);\n    paramElementMap.set('context.draftOrders.ontext.appointments.Appointment.id', ['id']);\n    paramElementMap.set('context.draftOrders.context.encounterId', ['id']);\n    paramElementMap.set('context.patientId', ['subject', 'reference']);\n    return paramElementMap;\n  }\n\n  static generateQueries(requestBundle, patientReference, userReference, ...prefetchKeys) {\n    var resolvedQueries = new Map();\n    for (var i = 0; i < prefetchKeys.length; i++) {\n      var prefetchKey = prefetchKeys[i];\n      var query = prefetchMap.get(prefetchKey).getQuery();\n      // Regex source: https://regexland.com/all-between-specified-characters/\n      var parametersToFill = query.match(/(?<={{).*?(?=}})/gs);\n      var resolvedQuery = query.slice();\n      for (var j = 0; j < parametersToFill.length; j++) {\n        var unresolvedParameter = parametersToFill[j];\n        var resolvedParameter;\n        if (requestBundle) {\n          var resolvedParameter = PrefetchTemplate.resolveParameter(unresolvedParameter, requestBundle);\n        } else {\n          if (unresolvedParameter === 'context.patientId') {\n            resolvedParameter = patientReference;\n          } else if (unresolvedParameter === 'context.userId') {\n            resolvedParameter = userReference\n          }\n        }\n        resolvedQuery = resolvedQuery.replace('{{' + unresolvedParameter + '}}', resolvedParameter);\n      }\n      resolvedQueries.set(prefetchKey, resolvedQuery);\n    }\n    return resolvedQueries;\n  }\n\n  // Source: https://www.tutorialspoint.com/accessing-nested-javascript-objects-with-string-key\n  static getProp(object, path) {\n    if (path.length === 1){\n      return object[path[0]];\n    }\n    else if (path.length === 0) {\n      throw new Error(\"Invalid property.\");\n    }\n    else {\n        if (object[path[0]]) return PrefetchTemplate.getProp(object[path[0]], path.slice(1));\n        else {\n          object[path[0]] = {};\n          return PrefetchTemplate.getProp(object[path[0]], path.slice(1));\n        }\n    }\n  };\n\n  static resolveParameter(unresolvedParameter, requestBundle) {\n    const paramField = paramElementMap.get(unresolvedParameter);\n    const resolvedParameter = PrefetchTemplate.getProp(requestBundle, paramField)\n    return resolvedParameter;\n  }\n\n  query;\n\n  constructor(query) {\n    this.query = query;\n  }\n\n  getQuery() {\n    return this.query;\n  }\n\n}\n\nconst prefetchMap = PrefetchTemplate.generatePrefetchMap();\nconst paramElementMap = PrefetchTemplate.generateParamElementMap();","import React, { Component } from \"react\";\nimport FHIR from \"fhirclient\";\nimport PatientBox from \"../SMARTBox/PatientBox\";\nimport { types, defaultValues, shortNameMap } from \"../../util/data\";\nimport { getAge } from \"../../util/fhir\";\nimport buildNewRxRequest from '../../util/buildScript.2017071.js';\nimport _ from \"lodash\";\nimport \"./request.css\";\nimport { PrefetchTemplate } from \"../../PrefetchTemplate\";\nimport { retrieveLaunchContext } from \"../../util/util\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Button, ButtonGroup, Modal, Box } from '@mui/material';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  flexDirection: 'column',\n  width: '80%',\n  transform: 'translate(-50%, -50%)',\n  display: 'flex',\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  borderBottom: '2px solid black',\n  boxShadow: 24,\n  p: 4,\n  padding:'0px'\n};\nexport default class RequestBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openPatient: false,\n      patientList: [],\n      patient: {},\n      prefetchedResources: new Map(),\n      codeValues: defaultValues,\n      code: null,\n      codeSystem: null,\n      display: null,\n      request: {},\n      gatherCount: 0,\n      response: {}\n    };\n\n    this.renderRequestResources = this.renderRequestResources.bind(this);\n    this.renderPatientInfo = this.renderPatientInfo.bind(this);\n    this.renderOtherInfo = this.renderOtherInfo.bind(this);\n    this.renderResource = this.renderResource.bind(this);\n    this.renderPrefetchedResources = this.renderPrefetchedResources.bind(this);\n    this.renderError = this.renderError.bind(this);\n    this.buildLaunchLink = this.buildLaunchLink.bind(this);\n  }\n\n  // TODO - see how to submit response for alternative therapy\n  replaceRequestAndSubmit(request) {\n    this.setState({ request: request });\n    // Submit the cds hook request.\n    this.submitOrderSign(request);\n  }\n\n  componentDidMount() {}\n\n  exitSmart = () => {\n    this.setState({ openPatient: false });\n  };\n\n  prepPrefetch() {\n    const preppedResources = new Map();\n    Object.keys(this.state.prefetchedResources).forEach((resourceKey) => {\n      let resourceList = []\n      if(Array.isArray(this.state.prefetchedResources[resourceKey])){\n        resourceList = this.state.prefetchedResources[resourceKey].map((resource) => {\n          return resource;\n        })\n      } else {\n        resourceList = this.state.prefetchedResources[resourceKey]\n      }\n\n      preppedResources.set(resourceKey, resourceList);\n    });\n    return preppedResources;\n  }\n\n  submitPatientView = () => {\n    this.props.submitInfo(\n      this.prepPrefetch(),\n      null,\n      this.state.patient,\n      \"patient-view\"\n    );\n  };\n\n  submitOrderSelect = () => {\n    if (!_.isEmpty(this.state.request)) {\n      this.props.submitInfo(\n        this.prepPrefetch(),\n        this.state.request,\n        this.state.patient,\n        \"order-select\"\n      );\n    }\n  };\n\n  submitOrderSign = (request) => {\n    this.props.submitInfo(\n      this.prepPrefetch(),\n      request,\n      this.state.patient,\n      \"order-sign\"\n    );\n  };\n\n  submit = () => {\n    if (!_.isEmpty(this.state.request)) {\n      this.submitOrderSign(this.state.request);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // if prefetch completed\n    if ((prevState.prefetchCompleted != this.state.prefetchCompleted) \n      && (this.state.prefetchCompleted)) {\n      // if the prefetch contains a medicationRequests bundle\n      if (this.state.prefetchedResources.medicationRequests) {\n        this.submitPatientView();\n      }\n      // we could use this in the future to send order-select\n      //// if the prefetch contains a request\n      //if (this.state.prefetchedResources.request) {\n      //  this.submitOrderSelect();\n      //}\n    }\n  }\n\n  updateStateElement = (elementName, text) => {\n    this.setState({ [elementName]: text });\n  };\n\n  updateStateList = (elementName, text) => {\n    this.setState((prevState) => {\n      return {[elementName]: [...prevState[elementName], text]}\n    });\n  };\n\n  updateStateMap = (elementName, key, text) => {\n    this.setState((prevState) => {\n      if(!prevState[elementName][key]){\n        prevState[elementName][key] = [];\n      }\n      return {[elementName]: {...prevState[elementName], [key]: text}};\n    });\n  };\n\n  clearState = () => {\n    this.setState({\n      prefetchedResources: new Map(),\n      practitioner: {},\n      coverage: {},\n      response: {}\n    });\n  };\n\n  getPatients = () => {\n    this.setState({ openPatient: true });\n    const params = {serverUrl: this.props.ehrUrl};\n    if (this.props.access_token.access_token) {\n        params[\"tokenResponse\"] = {access_token: this.props.access_token.access_token}\n    }\n    const client = FHIR.client(\n      params\n    );\n\n    client\n      .request(\"Patient?_sort=identifier&_count=12\", { flat: true })\n      .then((result) => {\n        this.setState({\n          patientList: result,\n        });\n      })\n      .catch((e) => {\n        this.setState({\n          patientList: e,\n        });\n      });\n  };\n\n  emptyField = <span className=\"empty-field\">empty</span>;\n\n  renderPatientInfo() {\n    const patient = this.state.patient;\n    if (Object.keys(patient).length === 0) {\n      return (\n          <div className=\"demographics\">\n          </div>\n        );\n    }\n    let name;\n    if (patient.name) {\n      name = (\n        <span> {`${patient.name[0].given[0]} ${patient.name[0].family}`} </span>\n      );\n    } else {\n      name = this.emptyField;\n    }\n    return (\n      <div className=\"demographics\">\n        <div className=\"lower-border\">\n          <span style={{ fontWeight: \"bold\" }}>Demographics</span>\n        </div>\n        <div className=\"info lower-border\">Name: {name}</div>\n        <div className=\"info lower-border\">\n          Age: {patient.birthDate ? getAge(patient.birthDate) : this.emptyField}\n        </div>\n        <div className=\"info lower-border\">\n          Gender: {patient.gender ? patient.gender : this.emptyField}\n        </div>\n        <div className=\"info lower-border\">\n          State: {this.state.patientState ? this.state.patientState : this.emptyField}\n        </div>\n        {this.renderOtherInfo()}\n        {this.renderQRInfo()}\n      </div>\n    );\n  }\n\n  renderOtherInfo() {\n    return (\n      <div className=\"other-info\">\n        <div className=\"lower-border\">\n          <span style={{ fontWeight: \"bold\" }}>Coding</span>\n        </div>\n        <div className=\"info lower-border\">\n          Code: {this.state.code ? this.state.code : this.emptyField}\n        </div>\n        <div className=\"info lower-border\">\n          System:{\" \"}\n          {this.state.codeSystem ? shortNameMap[this.state.codeSystem] : this.emptyField}\n        </div>\n        <div className=\"info lower-border\">\n          Display: {this.state.display ? this.state.display : this.emptyField}\n        </div>\n      </div>\n    );\n  }\n\n  renderQRInfo() {\n    const qrResponse = this.state.response;\n    return (\n      <div className=\"questionnaire-response\">\n        {qrResponse.questionnaire ? \n          <>\n            <div className=\"lower-border\">\n              <span style={{ fontWeight: \"bold\" }}>In Progress Form</span>\n            </div>\n            <div className=\"info lower-border\">Form: { qrResponse.questionnaire ? qrResponse.questionnaire : this.emptyField}</div>\n            <div className=\"info lower-border\">\n              Author: {qrResponse.author ? qrResponse.author.reference : this.emptyField}\n            </div>\n            <div className=\"info lower-border\">\n              Date: {qrResponse.authored ? qrResponse.authored : this.emptyField}\n            </div>\n          </>\n          :\n          <div/>\n        }\n        </div>\n    );\n  }\n\n  renderPrefetchedResources() {\n    const prefetchMap = new Map(Object.entries(this.state.prefetchedResources));\n    if (prefetchMap.size > 0) {\n      return this.renderRequestResources(prefetchMap);\n    }\n  }\n\n  renderRequestResources(requestResources) {\n    var renderedPrefetches = new Map();\n    requestResources.forEach((resourceList, resourceKey) => {\n      const renderedList = [];\n      if(Array.isArray(resourceList)){\n        resourceList.forEach((resource) => {\n          console.log(\"Request resources:\" + JSON.stringify(requestResources));\n          console.log(\"Request key:\" + resourceKey);\n          renderedList.push(this.renderResource(resource))\n        });\n      } else {\n        renderedList.push(this.renderResource(resourceList))\n      }\n\n      renderedPrefetches.set(resourceKey, renderedList);\n    });\n    console.log(renderedPrefetches);\n    console.log(Object.entries(renderedPrefetches));\n    return (\n      <div className=\"prefetched\">\n        <div className=\"prefetch-header\">Prefetched</div>\n        {Array.from(renderedPrefetches.keys()).map((resourceKey) => {\n          const currentRenderedPrefetch = renderedPrefetches.get(resourceKey);\n          return (<div key = {resourceKey}><div className=\"prefetch-subheader\">{resourceKey + \" Resources\"}</div>\n            {currentRenderedPrefetch}</div>);\n        })}\n      </div>\n    );\n  }\n\n  renderResource(resource) {\n    let value = <div>N/A</div>;\n    if (!resource.id) {\n      resource = resource.resource;\n    }\n    if (resource.id) {\n      var resourceId = resource.id;\n      var resourceType = resource.resourceType;\n      value = (\n        <div key={resourceId}>\n          <span style={{ textTransform: \"capitalize\" }}>{resourceType}</span>:{\" \"}\n          {resourceType}/{resourceId}{\" \"}\n          .....<span className=\"checkmark glyphicon glyphicon-ok\"></span>\n        </div>\n      );\n    } else {\n      value = (\n        <div key={\"UNKNOWN\"}>\n          <span style={{ textTransform: \"capitalize\" }}>{\"UNKNOWN\"}</span>{\" \"}\n          .....<span className=\"remove glyphicon glyphicon-remove\"></span>\n        </div>\n      );\n    }\n    return value;\n  }\n\n  renderError() {\n    return (\n      <span className=\"patient-error\">{this.state.patientList.message}</span>\n    );\n  }\n\n  launchSmartOnFhirApp = () => {\n    console.log(\"Launch SMART on FHIR App\");\n\n    let userId = this.state.prefetchedResources?.practitioner?.id;\n    if (!userId) {\n      console.log(\"Practitioner not populated from prefetch, using default from config: \" + this.props.defaultUser);\n      userId = this.props.defaultUser;\n    }\n\n    let link = {\n      appContext: \"user=\" + userId + \"&patient=\" + this.state.patient.id,\n      type: \"smart\",\n      url: this.props.smartAppUrl\n    }\n\n    retrieveLaunchContext(\n      link, this.props.fhirAccessToken,\n        this.state.patient.id, this.props.fhirServerUrl, this.props.fhirVersion\n    ).then((result) => {\n        link = result;\n        console.log(link);\n        // launch the application in a new window\n        window.open(link.url, '_blank');\n    });\n  }\n\n  /**\n   * Relaunch DTR using the available context\n   */\n  relaunch = (e) => {\n    this.buildLaunchLink()\n      .then(link => {\n        //e.preventDefault();\n        window.open(link.url, \"_blank\");\n      });\n  }\n\n  buildLaunchLink() {\n    // build appContext and URL encode it\n    let appContext = \"\";\n    let order = undefined, coverage = undefined, response = undefined;\n\n    if (!this.isOrderNotSelected()) {\n      if (Object.keys(this.state.request).length > 0) {\n        order = `${this.state.request.resourceType}/${this.state.request.id}`;\n        if (this.state.request.insurance && this.state.request.insurance.length > 0) {\n          coverage = `${this.state.request.insurance[0].reference}`;\n        }\n      }\n    }\n\n    if(order) {\n      appContext += `order=${order}`\n\n      if(coverage) {\n        appContext += `&coverage=${coverage}`\n      }\n    }\n    \n    if(Object.keys(this.state.response).length > 0) {\n      response = `QuestionnaireResponse/${this.state.response.id}`;\n    }\n    \n    if(order && response) {\n      appContext += `&response=${response}`\n    } else if (!order && response) {\n      appContext += `response=${response}`\n    } \n\n    const link = {\n      appContext: encodeURIComponent(appContext),\n      type: \"smart\",\n      url: this.props.launchUrl\n    }\n\n    let linkCopy = Object.assign({}, link);\n   \n    return retrieveLaunchContext(\n      linkCopy, this.props.fhirAccessToken,\n        this.state.patient.id, this.props.fhirServerUrl, this.props.fhirVersion\n    ).then((result) => {\n        linkCopy = result;\n        return linkCopy;\n    });\n  }\n\n  /**\n   * Send the NewRxRequestMessage to the Pharmacy Information System (PIMS)\n   */\n  sendRx = (e) => {\n    console.log(\"sendRx: \" + this.props.pimsUrl);\n\n    // build the NewRx Message\n    var newRx = buildNewRxRequest(this.state.prefetchedResources.patient, \n      this.state.prefetchedResources.practitioner,\n      this.state.request);\n    console.log(newRx);\n    const serializer = new XMLSerializer();\n    \n    // send the message to the prescriber\n    this.props.consoleLog(\"Sending Rx to PIMS\", types.info);\n    fetch(this.props.pimsUrl, {\n      method: 'POST',\n      //mode: 'no-cors',\n      headers: {\n        'Accept': 'application/xml',\n        'Content-Type': 'application/xml'\n      },\n      body: serializer.serializeToString(newRx)\n    })\n    .then(response => {\n      console.log(\"sendRx response: \");\n      console.log(response);\n      this.props.consoleLog(\"Successfully sent Rx to PIMS\", types.info);\n    })\n    .catch(error => {\n      console.log(\"sendRx error: \");\n      this.props.consoleLog(\"Server returned error sending Rx to PIMS: \", types.error);\n      this.props.consoleLog(error.message);\n      console.log(error);\n    });\n\n  }\n\n  isOrderNotSelected() {\n    return Object.keys(this.state.request).length === 0;\n  }\n\n  isPatientNotSelected() {\n    return Object.keys(this.state.patient).length === 0;\n  }\n\n  render() {\n    const params = {};\n    params['serverUrl'] = this.props.ehrUrl;\n    if (this.props.access_token) {\n        params['tokenResponse'] = {access_token: this.props.access_token.access_token};\n    }\n    const disableSendToCRD = this.isOrderNotSelected() || this.props.loading ;\n    const disableLaunchDTR = !this.state.response.questionnaire;\n    const disableSendRx = this.isOrderNotSelected() || this.props.loading;\n    const disableLaunchSmartOnFhir = this.isPatientNotSelected();\n    return (\n      <div>\n        <div className=\"request\">\n          <Modal open={this.state.openPatient}\n            onClose={this.exitSmart}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\">\n              <Box sx={style}>\n                    {this.state.patientList instanceof Error\n                      ? this.renderError()\n                      : this.state.patientList.map((patient) => {\n                          return (\n                            <PatientBox\n                              key={patient.id}\n                              patient={patient}\n                              params = {params}\n                              callback={this.updateStateElement}\n                              callbackList={this.updateStateList}\n                              callbackMap={this.updateStateMap}\n                              updatePrefetchCallback={\n                                PrefetchTemplate.generateQueries\n                              }\n                              clearCallback={this.clearState}\n                              ehrUrl={this.props.ehrUrl}\n                              options={this.state.codeValues}\n                              responseExpirationDays={this.props.responseExpirationDays}\n                              defaultUser={this.props.defaultUser}\n                            />\n                          );\n                        })}\n              </Box>\n\n          </Modal>\n          <div>\n            <Button variant='contained' onClick={this.getPatients} startIcon={<PersonIcon />}>\n                Select a patient\n            </Button>\n            <div className=\"request-header\">\n              {this.state.patient.id ? <span>Patient ID: {this.state.patient.id}</span> : <em>No patient selected</em>}\n            </div>\n            <div>\n              {this.renderPatientInfo()}\n              {this.renderPrefetchedResources()}\n            </div> \n          </div>\n        </div>\n        {this.state.patient.id ?\n        <div className=\"action-btns\">\n          <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n            <Button onClick={this.relaunch} disabled={disableLaunchDTR}>Open In-Progress Form</Button>\n            <Button onClick={this.launchSmartOnFhirApp} disabled={disableLaunchSmartOnFhir}>Launch SMART on FHIR App</Button>\n            <Button onClick={this.sendRx} disabled={disableSendRx}>Send Rx to Pharmacy</Button>\n            <Button onClick={this.submit} disabled={disableSendToCRD}>Sign Order</Button>\n          </ButtonGroup>\n        </div>\n      : <span />}\n      </div>\n    );\n  }\n}\n","import KJUR, { KEYUTIL } from 'jsrsasign';\nimport env from 'env-var';\n\nfunction makeid() {\n    var text = [];\n    var possible = \"---ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 25; i++)\n        text.push(possible.charAt(Math.floor(Math.random() * possible.length)));\n\n    return text.join('');\n}\n\nfunction login() {\n    const tokenUrl = (env.get('REACT_APP_AUTH').asString()) + \"/realms/\" + (env.get('REACT_APP_REALM').asString()) + \"/protocol/openid-connect/token\"\n    let params = {\n        grant_type: \"password\",\n        username: (env.get('REACT_APP_USER').asString()),\n        password: (env.get('REACT_APP_PASSWORD').asString()),\n        client_id: (env.get('REACT_APP_CLIENT').asString())\n    }\n\n    // Encodes the params to be compliant with\n    // x-www-form-urlencoded content type.\n    const searchParams = Object.keys(params).map((key) => {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n    }).join('&');\n    // We get the token from the url\n    return fetch(tokenUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: searchParams\n    });\n}\n\nfunction createJwt(keypair, baseUrl, cdsUrl) {\n    console.log(\"creating jwt\");\n    const currentTime = KJUR.jws.IntDate.get('now');\n    const endTime = KJUR.jws.IntDate.get('now + 1day');\n    const kid = KJUR.jws.JWS.getJWKthumbprint(keypair.public)\n\n    const header = {\n        \"alg\": \"RS256\",\n        \"typ\": \"JWT\",\n        \"kid\": kid,\n        \"jku\": (env.get('REACT_APP_PUBLIC_KEYS').asString())\n    };\n    const body = {\n        \"iss\": baseUrl,\n        \"aud\": cdsUrl,\n        \"iat\": currentTime,\n        \"exp\": endTime,\n        \"jti\": makeid()\n    }\n\n    var sJWT = KJUR.jws.JWS.sign(\"RS256\", JSON.stringify(header), JSON.stringify(body), keypair.private)\n    return sJWT;\n}\n\nfunction setupKeys(callback) {\n  const {prvKeyObj, pubKeyObj} = KEYUTIL.generateKeypair('RSA', 2048);\n  const jwkPrv2 = KEYUTIL.getJWKFromKey(prvKeyObj);\n  const jwkPub2 = KEYUTIL.getJWKFromKey(pubKeyObj);\n  const kid = KJUR.jws.JWS.getJWKthumbprint(jwkPub2)\n\n  const keypair = {\n      private: jwkPrv2,\n      public: jwkPub2,\n      kid: kid\n  }\n\n  const pubPem = {\n    \"pem\": jwkPub2,\n    \"id\": kid\n  };\n\n  fetch(`${env.get('REACT_APP_PUBLIC_KEYS').asString()}/`, {\n    \"body\": JSON.stringify(pubPem),\n    \"headers\": {\n        \"Content-Type\": \"application/json\"\n    },\n    \"method\": \"POST\"\n  }).then((response) => {\n      callback(keypair);\n  }).catch((error) => {\n      console.log(error);\n  })\n   \n}\n\nexport {\n    createJwt,\n    login,\n    setupKeys\n}\n","import React, { Component } from 'react';\n\nimport DisplayBox from '../components/DisplayBox/DisplayBox';\nimport ConsoleBox from '../components/ConsoleBox/ConsoleBox';\nimport '../index.css';\nimport '../components/ConsoleBox/consoleBox.css';\nimport SettingsBox from '../components/SettingsBox/SettingsBox';\nimport RequestBox from '../components/RequestBox/RequestBox';\nimport buildRequest from '../util/buildRequest.js';\nimport { types } from '../util/data.js';\nimport { createJwt, login, setupKeys } from '../util/auth';\nimport env from 'env-var';\n\nexport default class RequestBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            keypair: null,\n            loading: false,\n            logs: [],\n            patient: {},\n            response: null,\n            showSettings: false,\n            token: null,\n            // Configurable values\n            alternativeTherapy: env.get('REACT_APP_ALT_DRUG').asBool(),\n            baseUrl: env.get('REACT_APP_EHR_BASE').asString(),\n            cdsUrl: env.get('REACT_APP_CDS_SERVICE').asString(),\n            defaultUser: env.get('REACT_APP_DEFAULT_USER').asString(),\n            ehrUrl: env.get('REACT_APP_EHR_SERVER').asString(),\n            includeConfig: true,\n            launchUrl: env.get('REACT_APP_LAUNCH_URL').asString(),\n            orderSelect: env.get('REACT_APP_ORDER_SELECT').asString(),\n            orderSign: env.get('REACT_APP_ORDER_SIGN').asString(),\n            patientView: env.get('REACT_APP_PATIENT_VIEW').asString(),\n            pimsUrl: env.get('REACT_APP_PIMS_SERVER').asString(),\n            responseExpirationDays: env.get('REACT_APP_RESPONSE_EXPIRATION_DAYS').asInt(),\n            sendPrefetch: true,\n            smartAppUrl: env.get('REACT_APP_SMART_LAUNCH_URL').asString(),\n        };\n\n        this.updateStateElement = this.updateStateElement.bind(this);\n        this.submit_info = this.submit_info.bind(this);\n        this.consoleLog = this.consoleLog.bind(this);\n        this.takeSuggestion = this.takeSuggestion.bind(this);\n        this.requestBox = React.createRef();\n    }\n\n    componentDidMount() {\n        const callback = (keypair) => {\n            this.setState({ keypair });\n        }\n\n        setupKeys(callback);\n\n        login().then((response) => { return response.json() }).then((token) => {\n            this.setState({ token })\n        }).catch((error) =>{\n            // fails when keycloak isn't running, add dummy token\n            this.setState({ token: {access_token: \"\"}})\n        })\n    }\n\n    consoleLog(content, type) {\n        console.log(content);\n        let jsonContent = {\n            content: content,\n            type: type\n        }\n        this.setState(prevState => ({\n            logs: [...prevState.logs, jsonContent]\n        }))\n    }\n\n    updateStateElement = (elementName, text) => {\n        this.setState({ [elementName]: text });\n    }\n\n    timeout = (time) => {\n        let controller = new AbortController();\n        setTimeout(()=>controller.abort(), time * 1000);\n        return controller;\n    }\n\n    submit_info(prefetch, request, patient, hook) {\n        this.setState({loading: true});\n        this.consoleLog(\"Initiating form submission\", types.info);\n        this.setState({patient});\n        const hookConfig = {\n            \"includeConfig\": this.state.includeConfig,\n            \"alternativeTherapy\": this.state.alternativeTherapy\n        }\n        let user = this.state.defaultUser;\n        let json_request = buildRequest(request, user, patient, this.state.ehrUrl, this.state.token, prefetch, this.state.sendPrefetch, hook, hookConfig);\n        let cdsUrl = this.state.cdsUrl;\n        if (hook === \"order-sign\") {\n            cdsUrl = cdsUrl + \"/\" + this.state.orderSign;\n        } else if (hook === \"order-select\") {\n            cdsUrl = cdsUrl + \"/\" + this.state.orderSelect;\n        } else if (hook === \"patient-view\") {\n            cdsUrl = cdsUrl + \"/\" + this.state.patientView;\n        } else {\n            this.consoleLog(\"ERROR: unknown hook type: '\", hook, \"'\");\n            return;\n        }\n        let baseUrl = this.state.baseUrl;\n        const jwt = \"Bearer \" + createJwt(this.state.keypair, baseUrl, cdsUrl);\n        const headers = new Headers({\n            \"Content-Type\": \"application/json\",\n            \"authorization\": jwt\n        });\n        try {\n            fetch(cdsUrl, {\n                method: \"POST\",\n                headers: headers,\n                body: JSON.stringify(json_request),\n                signal: this.timeout(10).signal //Timeout set to 10 seconds\n            }).then(response => {\n                clearTimeout(this.timeout)\n                response.json().then((fhirResponse) => {\n                    console.log(fhirResponse);\n                    if (fhirResponse?.status) {\n                        this.consoleLog(\"Server returned status \"\n                            + fhirResponse.status + \": \"\n                            + fhirResponse.error, types.error);\n                        this.consoleLog(fhirResponse.message, types.error);\n                    } else {\n                        this.setState({ response: fhirResponse });\n                    }\n                    this.setState({ loading: false });\n                })\n            }).catch(() => {\n                this.consoleLog(\"No response received from the server\", types.error);\n                this.setState({ response: null });\n                this.setState({loading: false});\n            });\n        } catch (error) {\n            this.setState({ loading: false });\n            this.consoleLog(\"Unexpected error occurred\", types.error)\n            if (error instanceof TypeError) {\n                this.consoleLog(error.name + \": \" + error.message, types.error);\n            }\n        }\n    }\n\n    takeSuggestion(resource) {\n        // when a suggestion is taken, call into the requestBox to resubmit the CRD request with the new request\n        this.requestBox.current.replaceRequestAndSubmit(resource);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"nav-header\">\n                    <button className={\"btn btn-class settings \" + (this.state.showSettings ? \"active\" : \"not-active\")} onClick={() => this.updateStateElement(\"showSettings\", !this.state.showSettings)}><span className=\"glyphicon glyphicon-cog settings-icon\" /></button>\n\n                </div>\n                <div className=\"form-group container left-form\">\n                    <div id=\"settings-header\">\n\n\n                    </div>\n                    {this.state.showSettings &&\n                        <SettingsBox\n                            state={this.state}\n                            consoleLog={this.consoleLog}\n                            updateCB={this.updateStateElement}\n                        />}\n                    <div>\n                        {/*for the ehr launch */}\n                        <RequestBox\n                            ehrUrl={this.state.ehrUrl}\n                            submitInfo={this.submit_info}\n                            access_token={this.state.token}\n                            fhirServerUrl={this.state.baseUrl}\n                            fhirVersion={'r4'}\n                            patientId={this.state.patient.id}\n                            launchUrl={this.state.launchUrl}\n                            responseExpirationDays={this.state.responseExpirationDays}\n                            pimsUrl={this.state.pimsUrl}\n                            smartAppUrl={this.state.smartAppUrl}\n                            defaultUser={this.state.defaultUser}\n                            ref={this.requestBox}\n                            loading={this.state.loading}\n                            consoleLog={this.consoleLog}\n                        />\n\n                    </div>\n                    <br />\n\n                    <br />\n                    <br />\n                    <br />\n                    <ConsoleBox logs={this.state.logs} />\n                </div>\n\n                <div className=\"right-form\">\n                    <DisplayBox\n                        response={this.state.response}\n                        patientId={this.state.patient.id}\n                        ehrLaunch={true}\n                        fhirServerUrl={this.state.baseUrl}\n                        fhirVersion={'r4'}\n                        ehrUrl={this.state.ehrUrl}\n                        access_token={this.state.token}\n                        takeSuggestion={this.takeSuggestion} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\n\n","\nexport default function buildRequest(request, user, patient, ehrUrl, token, prefetch, includePrefetch, hook, hookConfig) {\n\n    // Use the provided user if there is no request for this hook\n    let userId = 'Practitioner/' + user;\n    if (request) {\n        userId = request.requester.reference;\n    }\n\n    const r4json = {\n        \"hookInstance\": \"d1577c69-dfbe-44ad-ba6d-3e05e953b2ea\",\n        \"fhirServer\": ehrUrl,\n        \"hook\": hook,\n        \"fhirAuthorization\": {\n            \"access_token\": token.access_token,\n            \"token_type\": \"Bearer\",\n            \"expires_in\": 300,\n            \"scope\": \"patient/Patient.read patient/Observation.read\",\n            \"subject\": \"cds-service4\"\n        },\n        \"context\": {\n            \"userId\": userId,\n            \"patientId\": patient.id,\n            \"encounterId\": \"enc89284\"\n        }\n    };\n\n    // add the extension containing the hook configuration\n    if (hookConfig.includeConfig) {\n        const extension = {\n            \"davinci-crd.configuration\": {\n                \"alt-drug\": hookConfig.alternativeTherapy\n            }\n        }\n        r4json.extension = extension;\n    }\n\n    if (hook === \"order-select\") {\n        r4json.context.draftOrders = {\n            \"resourceType\": \"Bundle\",\n            \"entry\": [\n                {\n                    \"resource\": request\n                }\n            ]\n        }\n        r4json.context.selections = [\n            request.resourceType + \"/\" + request.id\n        ]\n    } else if (hook === \"order-sign\") {\n        r4json.context.draftOrders = {\n            \"resourceType\": \"Bundle\",\n            \"entry\": [\n                {\n                    \"resource\": request\n                }\n            ]\n        }\n    //} else if (hook === \"patient-view\") {\n    }\n\n    if(includePrefetch){\n      r4json.prefetch = {};\n      prefetch.forEach((resource, key) => {\n        r4json.prefetch[key] = resource\n      });\n    }\n\n    console.log(r4json);\n    console.log(\"--------- r4\");\n    return r4json;\n}\n","import { createTheme } from '@mui/material/styles';\nconst colors = {\n  white: '#fff',\n  offWhite: '#f5f5fa',\n  black: '#222',\n  red: '#d95d77',\n  redDark: '#bb3551',\n  redLight: '#f50057',\n  blue: '#5d89a1',\n  blueDark: '#386883',\n  blueLighter: '#9ad2f0',\n  gray: '#4a4a4a',\n  grayMedium: '#676a70',\n  grayBlue: '#cbd5df',\n  grayBlueDark: '#7d8892',\n  grayHighlight: '#eaeaeb',\n  grayLight: '#4e5258',\n  grayLighter: '#b5b6ba',\n  grayLightest: '#f2f3f9',\n  grayDark: '#444',\n  grayVeryDark: '#3a3a3a',\n  grayLightText: '#87878e',\n  green: '#2fa874',\n  maroon: '#a83048',\n  purple: '#8b72d6',\n  turqoise: '#37c0ae',\n  turqoiseLight: '#e6f7f5'\n};\n\nconst paletteBase = {\n  primary: {\n    main: colors.blue\n  },\n  secondary: {\n    main: colors.redLight\n  },\n  error: {\n    main: colors.red\n  },\n  common: colors,\n  background: {\n    default: colors.grayLightest,\n    primary: colors.grayLight\n  },\n  text: {\n    primary: colors.black,\n    secondary: colors.black,\n    gray: colors.grayLighter\n  },\n  grey: {\n    800: colors.gray\n  },\n  purple: {\n    main: colors.purple\n  }\n};\n\nconst materialUiOverridesBase = {\n  MuiTableCell: {\n    body: {\n      color: '#575b62'\n    },\n    head: {\n      color: '#575b62',\n      fontWeight: '600',\n      fontSize: '12px'\n    },\n    sizeSmall: {\n      padding: '5px 24px 5px 16px',\n      '&:last-child': {\n        paddingRight: '0px',\n        width: '80px'\n      }\n    }\n  },\n  MuiTableContainer: {\n    root: {\n      width: '70vw',\n      margin: '0 20px 0 20px',\n      overflowY: 'visible',\n      overflowX: 'scroll',\n      backgroundColor: 'white'\n    }\n  },\n  MuiTableSortLabel: {\n    root: {\n      color: 'black',\n      '&$active': {\n        color: 'black'\n      }\n    }\n  }\n};\n\nconst theme = createTheme({\n  palette: { ...paletteBase },\n  overrides: { ...materialUiOverridesBase }\n});\n\nexport default theme;\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Routes, Route}\n    from 'react-router-dom';\nimport RequestBuilder from '../containers/RequestBuilder';\nimport PatientPortal from '../containers/PatientPortal';\nimport theme from '../containers/styles/theme';\nimport { ThemeProvider } from '@mui/styles';\n\nexport default class App extends Component {\n    render() {\n        return (\n                <Router>\n                    <Routes>\n                        <Route path='/' exact element={<RequestBuilder />} />\n                        \n                        <Route exact path='/patient-portal' element={\n                        <ThemeProvider theme={theme}>\n                            <PatientPortal />\n                        </ThemeProvider>} />\n\n                    </Routes>\n                </Router>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport { BrowserRouter }  from 'react-router-dom'\n\nReactDOM.render(\n   <BrowserRouter basename={process.env.PUBLIC_URL}>\n     <App />\n   </BrowserRouter>\n    ,document.getElementById('root'));\n","import axios from 'axios';\n\n/**\n * Retrieves a SMART launch context from an endpoint to append as a \"launch\" query parameter to a SMART app launch URL (see SMART docs for more about launch context).\n * This applies mainly if a SMART app link on a card is to be launched. The link needs a \"launch\" query param with some opaque value from the SMART server entity.\n * This function generates the launch context (for HSPC Sandboxes only) for a SMART application by pinging a specific endpoint on the FHIR base URL and returns\n * a Promise to resolve the newly modified link.\n * @param {*} link - The SMART app launch URL\n * @param {*} accessToken - The access token provided to the CDS Hooks Sandbox by the FHIR server\n * @param {*} patientId - The identifier of the patient in context\n * @param {*} fhirBaseUrl - The base URL of the FHIR server in context\n */\nfunction retrieveLaunchContext(link, accessToken, patientId, fhirBaseUrl, fhirVersion) {\n    return new Promise((resolve, reject) => {\n        const headers = accessToken ?\n        {\n        \"Accept\": 'application/json',\n        \"Authorization\": `Bearer ${accessToken.access_token}`\n        }\n        :\n        {        \n        \"Accept\": 'application/json'\n        };\n        const launchParameters = {\n        patient: patientId,\n        };\n    \n        if (link.appContext) {\n        launchParameters.appContext = link.appContext;\n        }\n    \n        // May change when the launch context creation endpoint becomes a standard endpoint for all EHR providers\n        axios({\n        method: 'post',\n        url: `${fhirBaseUrl}/_services/smart/Launch`,\n        headers,\n        data: {\n            launchUrl: link.url,\n            parameters: launchParameters,\n        },\n        }).then((result) => {\n        if (result.data && Object.prototype.hasOwnProperty.call(result.data, 'launch_id')) {\n            if (link.url.indexOf('?') < 0) {\n            link.url += '?';\n            } else {\n            link.url += '&';\n            }\n            link.url += `launch=${result.data.launch_id}`;\n            link.url += `&iss=${fhirBaseUrl}`;\n            return resolve(link);\n        }\n        console.error('FHIR server endpoint did not return a launch_id to launch the SMART app. See network calls to the Launch endpoint for more details');\n        link.error = true;\n        return reject(link);\n        }).catch((err) => {\n        console.error('Cannot grab launch context from the FHIR server endpoint to launch the SMART app. See network calls to the Launch endpoint for more details', err);\n        link.error = true;\n        return reject(link);\n        });\n    });\n}\n\nexport {\n    retrieveLaunchContext\n}\n"],"sourceRoot":""}